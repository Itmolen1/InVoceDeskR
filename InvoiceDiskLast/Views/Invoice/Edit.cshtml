@model InvoiceDiskLast.Models.InvoiceViewModel

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_Layout.cshtml";
    var InvoiceModel = ViewBag.InvoiceData;
}

<script src="~/CustomScript/DateTimeFormate.js"></script>
<link href="~/CustomClasses/Txt_Area.css" rel="stylesheet" />

<div class="container">
    @Html.HiddenFor(model => model.InvoiceID, new { htmlAttribute = new { id = "InvoiceID" } })
    <div class="row" style="border:1px solid black">
        <div class="col-md-12">
            @Html.Partial("~/Views/Shared/PartialViews/HeaderPartial.cshtml")
            <hr />
            <div class="card card-body printableArea">
                <div class="table-responsive" style="clear: both">
                    <table class="table table-hover" id="orderdetailsitems1">
                        <thead class="thead-dark">
                            <tr>
                                <th>
                                    Goederen
                                </th>
                                <th>
                                    Quantity
                                </th>
                                <th>
                                    Prijs
                                </th>
                                <th>
                                    Totaal
                                </th>
                                <th>
                                    BTW%
                                </th>
                                <th>
                                    Subtotaal
                                </th>
                                <th>

                                </th>

                                <th>
                                    Actie <span class="text-danger pull-right TableClose" title="Verberg deze tabel">x</span>
                                </th>

                            </tr>
                        </thead>
                        <tbody class="tbodyGood">

                            @{
                                if (ViewBag.InvoiceDetailsList != null)
                                {
                                    foreach (var item in ViewBag.InvoiceDetailsList)
                                    {
                                        if (item.Type == "Goods")
                                        {
                                            <tr>
                                                <td>
                                                    <select class="product form-control pClassG Input-height" style="width: 250px;font-size:12px">
                                                        <option value="AddNewProductSelect">Select Item..</option>
                                                        @foreach (var product in ViewBag.Good)
                                                        {
                                                            <option value="@product.ProductId" @(product.ProductId == item.ItemId ? "selected='selected'" : "" )>@product.ProductName</option>
                                                        }
                                                    </select>
                                                </td>
                                                <td>
                                                    <input type="text" class="quantityG form-control Input-height" style="width: 100px;font-size:12px" value="@item.Quantity" autocomplete="off" />
                                                </td>
                                                <td>
                                                    <input type="text" class="rateG form-control Input-height" style="width: 100px;font-size:12px" value="@item.Rate" autocomplete="off" />
                                                </td>

                                                <td>
                                                    <input type="text" class="FTotalG form-control Input-height" style="width: 120px;font-size:12px" value="@item.Total" readonly="readonly" autocomplete="off" />
                                                </td>
                                                <td>
                                                    <select name="NewsCategoriesID" class="VATG form-control Input-height" style="width:80px;font-size:12px">
                                                        @foreach (var item1 in ViewBag.VatDrop)
                                                        {
                                                            <option value="@item1.Vat1" @(item1.Vat1 == item.Vat ? "selected='selected'" : "")>@item1.Name</option>
                                                        }
                                                    </select>

                                                </td>

                                                <td>
                                                    <input type="text" readonly class="RowTotalG  form-control Input-height" style="width:100px" value="@item.RowSubTotal" />
                                                </td>
                                                <td>
                                                    <input type="hidden" id="InvoiceDetailId" class="InvoiceDetailId" value="@item.InvoiceDetailId" />
                                                </td>
                                                <td>
                                                    <input type="button" id="btnRemoveGood" value="x" class="btn-height-Remove pull-right" style="width:50px" />
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            }
                            <tr id="mainrow">
                                <td>
                                    <select id="SelectProductQutationG" class="product form-control pClassG Input-height" style="width: 250px;font-size:12px"></select>
                                </td>
                                <td>
                                    <input type="text" class="quantityG form-control Input-height" id="QuantityG" style="width: 100px;font-size:12px" />
                                </td>
                                <td>
                                    <input type="text" class="rateG form-control Input-height" id="rateG" style="width: 100px;font-size:12px" />
                                </td>
                                <td>
                                    <input type="text" class="FTotalG form-control Input-height" id="FTotal" style="width: 120px;font-size:12px" />
                                </td>
                                <td>
                                    <select id="SelectVATG" class="VATG form-control Input-height" style="width:80px;font-size:12px">
                                        <option>0</option>
                                        <option>6</option>
                                        <option>21</option>
                                    </select>
                                </td>
                                <td>
                                    <input type="text" readonly id="RowTotalG" class="RowTotalG  form-control Input-height" style="width:100px" />
                                </td>
                                <td></td>
                                <td>
                                    <input type="button" id="btnaddGoods" value="+" class="btn-height pull-right" style="width:50px" />
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <hr />
                <div class="table-responsive" style="clear: both;">
                    <table class="table table-hover" id="QutationServiceDetail">
                        <thead class="thead-dark">
                            <tr>
                                <th>Datam</th>
                                <th>
                                    Diensten
                                </th>
                                <th>Omschrijving</th>
                                <th>
                                    uur
                                </th>
                                <th>
                                    Uurprijs
                                </th>
                                <th>
                                    Totaal
                                </th>
                                <th>
                                    BTW %
                                </th>
                                <th>
                                    Subtotaal
                                </th>
                                <th></th>
                                <th>
                                    Actie<span class="text-danger pull-right TableClose" title="Verberg deze tabel">x</span>
                                </th>
                            </tr>
                        </thead>
                        <tbody class="tbodyService">
                            @{
                                if (ViewBag.InvoiceDetailsList != null)
                                {
                                    foreach (var item in ViewBag.InvoiceDetailsList)
                                    {
                                        DateTime dt = new DateTime();
                                        dt = Convert.ToDateTime(item.ServiceDate);

                                        if (item.Type == "Service")
                                        {
                                            <tr>
                                                <td>
                                                    <input type="text" class="ServiceDate ss Input-height form-control" value="@dt.ToShortDateString()" style="width: 100px;font-size:12px" autocomplete="off" />
                                                </td>
                                                <td>
                                                    <select class="product form-control pClassG Input-height" style="width: 150px;font-size:12px">
                                                        <option value="AddNewServiceSelect">Select Item..</option>
                                                        @foreach (var product in ViewBag.Service)
                                                        {
                                                            <option value="@product.ProductId" @(product.ProductId == item.ItemId ? "selected='selected'" : "")>@product.ProductName</option>
                                                        }
                                                    </select>
                                                </td>
                                                <td>
                                                    <input type="text" class="Discription form-control Input-height" value="@item.Description" autocomplete="off" style="width: 150px;font-size:12px" />
                                                </td>
                                                <td>
                                                    <input type="text" class="quantityG form-control Input-height" style="width: 80px;font-size:12px" value="@item.Quantity" autocomplete="off" />
                                                </td>
                                                <td>
                                                    <input type="text" class="rateG form-control Input-height" style="width:80px;font-size:12px" value="@item.Rate" autocomplete="off" />
                                                </td>
                                                <td>
                                                    <input type="text" class="FTotalG form-control Input-height" style="width: 80px;font-size:12px" value="@item.Total" readonly="readonly" autocomplete="off" />
                                                </td>
                                                <td>
                                                    <select name="NewsCategoriesID" class="VATG form-control Input-height" style="width:60px;font-size:12px">

                                                        @foreach (var item1 in ViewBag.VatDrop)
                                                        {
                                                            <option value="@item1.Vat1" @(item1.Vat1 == item.Vat ? "selected='selected'" : "")>@item1.Name</option>
                                                        }
                                                    </select>

                                                </td>
                                                <td>
                                                    <input type="text" readonly class="RowTotalG  form-control Input-height" style="width:80px" value="@item.RowSubTotal" autocomplete="off" />
                                                </td>
                                                <td>
                                                    <input type="hidden" id="InvoiceDetailId" class="InvoiceDetailId" value="@item.InvoiceDetailId" />
                                                </td>
                                                <td>
                                                    <input type="button" id="btnRemoveService" value="x" class="btn-height-Remove" style="width:50px" />
                                                </td>
                                            </tr>
                                        }
                                    }
                                }
                            }
                            <tr id="mainrow1">
                                <td>
                                    <input class="ServiceDate  ss  form-control Input-height" style="width: 100px;font-size:12px" />
                                </td>
                                <td>
                                    <select id="SelectProductQutationS" class="product form-control pClassG Input-height" style="width: 150px;font-size:12px"></select>
                                </td>
                                <td>
                                    <input type="text" class="Discription form-control Input-height" style="width: 150px;font-size:12px" />
                                </td>
                                <td>
                                    <input type="text" class="quantityG form-control Input-height" id="QuantityS" style="width: 80px;font-size:12px" />
                                </td>
                                <td>
                                    <input type="text" class="rateG form-control Input-height" id="RateS" style="width: 80px;font-size:12px" />
                                </td>
                                <td>
                                    <input type="text" class="FTotalG form-control Input-height" id="FTotals" style="width: 80px;font-size:12px" readonly="readonly" />
                                </td>
                                <td>
                                    <select id="SelectVATS" class="VATG form-control Input-height" style="width:60px;font-size:12px">
                                        <option>0</option>
                                        <option>6</option>
                                        <option>21</option>
                                    </select>
                                </td>
                                <td>
                                    <input type="text" readonly class="RowTotalG form-control Input-height" id="dddd" style="width:80px" />
                                </td>
                                <td></td>
                                <td>
                                    <input type="button" id="btnSerVice" value="+" class="btn-height" style="width:50px" />
                                </td>
                            </tr>
                        </tbody>
                    </table>
                </div>
                <p></p>
                <div class="col-md-12">
                    <div class="pull-left text-left">
                        <textarea id="CustomerNote" class="form-control" placeholder="Customer Note" style="font-size:12px"></textarea>
                        @Html.Partial("~/Views/Shared/PartialViews/UploadPartialFileEdit.cshtml")
                    </div>
                    <div class="pull-right text-right" style="padding-top:10px">
                        <p>Sub - Total amount: €<label id="SubTotal">@InvoiceModel.SubTotal</label></p>
                        <p>Totaal excel btw: €<label id="TotalBTW">@InvoiceModel.SubTotal</label></p>
                        <p>BTW (0%) : €<label id="btwo">0.00</label> </p>
                        <p>BTW (6%) : €<label id="BTW6">@InvoiceModel.TotalVat6</label></p>
                        <p>BTW (21%) : €<label id="BTW21">@InvoiceModel.TotalVat21</label> </p>
                        <hr>
                        <h3><b>Garnd Total :</b> €<label id="gtotal">@InvoiceModel.TotalAmount</label></h3>
                    </div>
                    <div class="clearfix"></div>
                    <hr>

                    <button id="Submit" class="btn btn-info btn-lg" style="margin-bottom:5px"><span><i class="fa fa-save fa-backgroun" style="margin-right:5px"></i></span>Save Draft</button>
                    <button id="saveEmail" class="btn btn-info btn-lg" style="margin-bottom:5px"><span><i class="fa fa-envelope fa-backgroun" style="margin-right:5px"></i></span>Save + E-mail</button>
                    <button id="saveprintandsendtoyourselfsave" class="btn btn-info btn-lg" style="margin-bottom:5px"><span><i class="fa fa-download fa-backgroun" style="margin-right:5px"></i></span>Save + Download</button>
                   
                </div>
            </div>
        </div>
    </div>
</div>


@Html.Partial("~/Views/Shared/PartialViews/ProductPartialView.cshtml")
@Html.Partial("~/Views/Shared/PartialViews/UnitPartialView.cshtml")

<script>

    var Currentrow, Total, vat, Price, Quantity = 0;
    $(document).ready(function () {
        LoadProductS();
        LoadProductG();
    });

    var VAT21VAlUE, VAT6VAlUE;
    $('#btnaddGoods').click(function () {

        var currentRow1 = $(this).closest("tr");
        var VAT = currentRow1.find('.VATG').val();
        RowSubTalSubtotal(VAT, currentRow1);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();

        var isAllValid = true;
        if ($("#mainrow #SelectProductQutationG").val() == "0") {
            isAllValid = false;
            alert("Please select Item");
            return;
        }
        var isAllValid = true;
        if ($("#mainrow .quantityG").val() == 0) {
            isAllValid = false;

            alert("Please provide quantityG");
            return;
        }
        var isAllValid = true;
        if ($("#mainrow .rateG").val() == 0) {
            isAllValid = false;
            alert("Please select provide rate");
            return;
        }
        
        if (isAllValid) {
            var $newRow = $("#mainrow").clone().removeAttr('id');
            $('#SelectProductQutationG', $newRow).val($("#SelectProductQutationG").val());
            $('.VATG', $newRow).val($("#mainrow #SelectVATG").val());
            //Replace add button with remove button
            $("#btnaddGoods", $newRow).addClass('remove').val('x').removeClass('btn-success').addClass('btn-height-Remove');
            //Remove id attribute from new clone row
            $("#SelectProductQutationG,#QuantityG,#RateG,#FTotalG,#SelectVATG", $newRow).removeAttr('id');
            $('span.error', $newRow).remove();
            
            $('.tbodyGood tr:last').before($newRow);
            $(".FTotalG").prop('disabled', true);
            $('#mainrow #SelectProductQutationG').val('0');
            $('#mainrow .quantityG').val('');
            $('#mainrow #RateG').val('');
            $('#mainrow .FTotalG').val('');
            $('#mainrow .quantityG').val('');
            $('#mainrow .RowTotalG').val('');

            if ($('#orderItemError').text != '') {
                $('#orderItemError').text('');
            }
            $('#mainrow #SelectVATG').val(0);
        }
    });

    $('#btnSerVice').click(function () {

        var currentRow1 = $(this).closest("tr");
        vat = currentRow1.find('.VATG').val();
        RowSubTalSubtotal(vat, currentRow1);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();

        var isAllValid = true;
        if ($("#mainrow1 #SelectProductQutationS").val() == "0") {
            isAllValid = false;
            alert("Please select Item");
            return;
        }

        var isAllValid = true;
        if ($("#mainrow1 .quantityS").val() == 0) {
            isAllValid = false;

            alert("Please provide quantity");
            return;
        }
        var isAllValid = true;
        if ($("#mainrow1 .rateS").val() == 0) {
            isAllValid = false;
            alert("Please select provide rate");
            return;
        }


        var currentRow1 = $(this).closest("tr");
        var vat = currentRow1.find('.VATG').val();
        RowSubTalSubtotal(vat, currentRow1);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
        
        if (isAllValid) {
            var $newRow = $("#mainrow1").clone().removeAttr('id');
            $('#SelectProductQutationS', $newRow).val($("#SelectProductQutationS").val());
            $('.VATG', $newRow).val($("#mainrow1 #SelectVATS").val());

            //Replace add button with remove button
            $("#btnSerVice", $newRow).addClass('remove').val('x').removeClass('btn-success').addClass('btn-height-Remove');

            currentRow1.find('.ServiceDate ').removeAttr('id');
            currentRow1.find('.ServiceDate ').remove('id');
            //Remove id attribute from new clone row

            $("#SelectProductQutationS,#QuantityS,#RateS,#FTotalS,#SelectVATS", $newRow).removeAttr('id');

            $('span.error', $newRow).remove();
            $('.tbodyService tr:last').before($newRow);

            $(".FTotalG").prop('disabled', true);

            $('#mainrow1 #SelectProductQutationS').val('0');
            $('#mainrow1 .quantityG').val('');
            $('#mainrow1 .rateG ').val('');

            $('#mainrow1 #FTotalG').val('');
            $('#mainrow1 .quantityG').val('');
            $('#mainrow1 #FTotal').val('');
            if ($('#orderItemError').text != '') {
                $('#orderItemError').text('');
            }
            $('#mainrow1 #SelectVATS').val(0);
            $('#mainrow1 #RowTotalG').val('');
            $('#mainrow1 .RowTotalG').val('');
            $('#QutationServiceDetail1 #mainrow1 .RowTotalG ').val('');
        }


    });

    function LoadProductG() {
        PgoodServices = "Good";

        $("#mainrow #SelectProductQutationG").find("option").remove();
        $("#mainrow #SelectProductQutationG").prepend("<option value=0>" + 'Select Item' + "</option>");
        $("#mainrow #SelectProductQutationG").append("<option value=AddNewProductSelect>" + 'Add New Product' + "</option>");

        $.ajax({
            url: "/MVCProduct/GetProduct",
            type: "Get",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            data: { ProductStatus: PgoodServices },
            success: function (data) {
                $.each(data, function (key, item) {
                    $('#mainrow #SelectProductQutationG').append($('<option></option>').val(item.ProductId).html(item.ProductName));
                });
            },
            Error: function (errormessage) {
                alert(errormessage);
            }

        });
    }

    function LoadProductS() {
        PgoodServices = "Services";

        $("#mainrow1 #SelectProductQutationS").find("option").remove();
        $("#mainrow1 #SelectProductQutationS").prepend("<option value=0>" + 'Select Item' + "</option>");
        $("#mainrow1 #SelectProductQutationS").append("<option value=AddNewServiceSelect>" + 'Add New Product' + "</option>");

        $.ajax({
            url: "/MVCProduct/GetProduct",
            type: "Get",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            data: { ProductStatus: PgoodServices },
            success: function (data) {
                $.each(data, function (key, item) {

                    $('#mainrow1 #SelectProductQutationS').append($('<option></option>').val(item.ProductId).html(item.ProductName));
                });
            },
            Error: function (errormessage) {
                alert(errormessage);
            }
        });
    }

    $('.quantityG').keyup(function () {
        var Currentrow = $(this).closest("tr");
        calculateTotalGoods(Currentrow);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    $('.rateG').keyup(function () {
        var Currentrow = $(this).closest("tr");
        calculateTotalGoods(Currentrow);

        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    var FocuseInTotal, FocusOutTotal, FoucuseInSubTotal, FocusOutSubTotal;

    $(document).on("keypress", "tbody .rateG", function () {

        var Currentrow = $(this).closest("tr");
        FoucuseInSubTotal = Currentrow.find(".FTotalG").val();
        FocuseInTotal = Currentrow.find('.RowTotalG').val();
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();

    });

    $(document).on("keyup", "tbody .rateG", function () {

        var Currentrow = $(this).closest("tr");
        var vat = Currentrow.find(".VATG").val();
        calculateTotalGoods(Currentrow);
        RowSubTalSubtotal(vat, Currentrow);
        var Total = Currentrow.find(".FTotalG").val();
        var Subtotalwt = Currentrow.find('.RowTotalG').val();
        // GrandTotal("Add", Total, Subtotalwt);
    });

    $(document).on("keyup", "tbody .quantityG", function () {
        var Currentrow = $(this).closest("tr");
        var vat = Currentrow.find(".VATG").val();
        calculateTotalGoods(Currentrow);
        RowSubTalSubtotal(vat, Currentrow);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    $(document).on("keyup", "tbody .rateG", function () {

        var Currentrow = $(this).closest("tr");
        var vat = Currentrow.find(".VATG").val();
        calculateTotalGoods(Currentrow);
        RowSubTalSubtotal(vat, Currentrow);

        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    $(document).on("keyup", "tbody .quantityG", function () {
         var  Currentrow = $(this).closest("tr");
         var vat = Currentrow.find(".VATG").val();
        calculateTotalGoods(Currentrow);
        RowSubTalSubtotal(vat, Currentrow);

        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    function calculateTotalGoods(currentRow) {

        Quantity = currentRow.find(".quantityG").val(),
        Price = currentRow.find('.rateG').val();
        Total = parseFloat(Quantity * Price);
        if (!isNaN(Total)) {
            currentRow.find('.FTotalG').val(Total);
        }

    }

    function RowSubTalSubtotal(vat, CurrentRow) {

        
        var price = CurrentRow;
        Total = 0;
        Total = CurrentRow.find('.FTotalG').val();
        if (parseInt(vat) == 0 && typeof (vat) != "undefined") {
            if (!isNaN(Total) && typeof (Total) != "undefined") {
                CurrentRow.find('.RowTotalG').val(Total);
                CurrentRow.find('.RowTotalG').val(parseFloat(Total).toFixed(2));
                return;
            }
        }

        if (!isNaN(Total) && typeof (Total) != "undefined" && Total != "") {
            var InputVatValue = parseFloat((Total / 100) * vat);
            var ValueWTV = parseFloat(InputVatValue) + parseFloat(Total);
            CurrentRow.find('.RowTotalG').val(parseFloat(ValueWTV).toFixed(2));
        }
    }

    $(document).on('change', 'tbody .VATG', function () {

        var currentRow1 = $(this).closest("tr");
        var VAT = currentRow1.find('.VATG').val();
        RowSubTalSubtotal(VAT, currentRow1);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();

    });

    $('.VATG').change(function () {

        

        var Currentrow = $(this).closest("tr");
        var vat = Currentrow.find('.VATG').val();
        RowSubTalSubtotal(vat, Currentrow);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
        Currentrow = "";
    });

    $('.quantityG').keyup(function () {
        
        var Currentrow = $(this).closest("tr");
        var vat = Currentrow.find('.VATG').val();
        RowSubTalSubtotal(vat, Currentrow);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    $('.quantityG').keyup(function () {
        
        var Currentrow = $(this).closest("tr");
        var vat = Currentrow.find('.VATG').val();
        RowSubTalSubtotal(vat, Currentrow);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    $('.rateG').keyup(function () {
        var Currentrow = $(this).closest("tr");
        var vat = Currentrow.find('.VATG').val();
        RowSubTalSubtotal(vat, Currentrow);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    $('tbody .VATG').change(function () {
        var Currentrow = $(this).closest("tr");
        var vat = Currentrow.find('.VATG').val();
        RowSubTalSubtotal(vat, Currentrow);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    $('.VATG').change(function () {
        var currentRow1 = $(this).closest("tr");
        var vat = currentRow1.find('.VATG').val();
        RowSubTalSubtotal(vat, Currentrow);
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });        //Services

    function CalculateVateTotal() {
        var Totalvat211, Totalvat6 = 0;
        var t = 0;
        $('#QutationServiceDetail tr').each(function () {
            var Value = 0;
            Value = $(this).find(".VATG").val();
            var FTotalG = $(this).find(".FTotalG").val();
            if (Value == 21) {
                if (!isNaN(parseFloat(Value))) {
                    var InputVatValue = parseFloat((FTotalG / 100) * 21);
                    t += parseFloat(InputVatValue)
                }
            }

            if (Value == 6) {
                if (!isNaN(parseFloat(Value))) {
                    var InputVatValue = parseFloat((FTotalG / 100) * 6);

                    Totalvat6 += parseFloat(InputVatValue);
                }
            }
        });


        $('#orderdetailsitems1 tr').each(function () {
            var Value = $(this).find(".VATG").val();
            var FTotalG = $(this).find(".FTotalG").val();
            if (Value == 6) {
                if (!isNaN(parseFloat(Value))) {
                    var InputVatValue = parseFloat((FTotalG / 100) * 6);
                    Totalvat6 += parseFloat(InputVatValue);
                }
            }
            if (Value == 21) {
                if (!isNaN(parseFloat(Value))) {
                    var InputVatValue = parseFloat((FTotalG / 100) * 21);
                    t += parseFloat(InputVatValue);
                }
            }
        });


        if (!isNaN(Totalvat6)) {
            $('#BTW6').text(Totalvat6.toFixed(2));
        }
        if (!isNaN(t)) {
            $('#BTW21').text(parseFloat(t).toFixed(2));
        }
    }

    $(document).ready(function () {
        $('.pClassG').change(function () {
            
            var currentRow1 = $(this).closest('tr');
            var value = currentRow1.find('.pClassG').val();
            GetProductPriceByProductId(value, currentRow1);
        });
    })

    $('#mainrow .pClassG').change(function () {       
        var currentRow = $(this).closest('tr');
        var value = currentRow.find('.pClassG').val();
        GetProductPriceByProductId(value, currentRow);
    });

    $('#mainrow1 .pClassG').change(function () { 
        var currentRow = $(this).closest('tr');
        var value = currentRow.find('.pClassG').val();
        GetProductPriceByProductId(value, currentRow);
    });

    function GetProductPriceByProductId(Id, CurrentRow) {
        if (Id == "AddNewProductSelect") {
            GoodsService = "";
            GoodsService = "Good";
            ShowServiceGood("Good");
            $('#TypeGoodsServices').attr('disabled', false);
            $('#UpdateProIdGoods').hide();
            $('#SAveProdIDGoods').show();
            $('#TypeGoodsServices').val('Good');
            $('#TypeGoodsServices').attr('disabled', 'disabled');
            $('#CreateNewProductModalGoods').modal('show');
        }
        if (Id == "AddNewServiceSelect") {
            GoodsService = "";
            GoodsService = "Services";
            ShowServiceGood("Services");
            $('#TypeGoodsServices').attr('disabled', false);
            $('#UpdateProIdGoods').hide();
            $('#SAveProdIDGoods').show();
            $('#TypeGoodsServices').val('Services');
            $('#TypeGoodsServices').attr('disabled', 'disabled');
            $('#CreateNewProductModalGoods').modal('show');
        }
        else if (Id == "0") {

            return;
        }
        else {
            var productId = Id;
            $.ajax({
                url: "/Common/ProductPricebyId",
                type: "POST",
                cache: false,
                data: { 'ProductId': productId },
                success: function (resultData) {

                    CurrentRow.find('.rateG').val(resultData);
                    calculateTotalGoods(CurrentRow);
                    CombineTotalAndSubtotal();
                    CombineTotal();
                    CalculateVateTotal();
                    vat = CurrentRow.find('.VATG').val();
                    var it = CurrentRow.find('.RowTotalG').val();
                    RowSubTalSubtotal(vat, CurrentRow);

                },
                error: function (errormessage) {

                }
            });
        }
    }

    function CombineTotalAndSubtotal() {
        var SubTotalGoode = 0, SubTotalService = 0;
        SubTotalGoode = AddSubtotalGoods();
        SubTotalService = AddSubTotalService();
        if (isNaN(SubTotalGoode)) {
            SubTotalGoode = 0;
        }
        if (isNaN(SubTotalService)) {
            SubTotalService = 0;
        }
        var Total = parseFloat(SubTotalGoode) + parseFloat(SubTotalService);
        $('#gtotal').text(Total.toFixed(2));
    }

    function CombineTotal() {
        var TotalGoode, Total, TotalService1 = 0;
        TotalGoode = totalGoods();
        TotalService1 = TotalService();
        if (isNaN(TotalGoode)) {
            TotalGoode = 0;
        }
        if (isNaN(TotalService1)) {
            TotalService1 = 0;
        }
        Total = parseFloat(TotalGoode) + parseFloat(TotalService1);
        $('#SubTotal').text(Total.toFixed(2));
        $('#TotalBTW').text(Total.toFixed(2));
    }

    function AddSubtotalGoods() {
        var SubTotalGood = 0;
        $('#orderdetailsitems1 tbody tr').each(function () {
            var Value = $(this).find(".RowTotalG").val();
            if (!isNaN(parseFloat(Value) && typeof (Value) != "undefined")) {
                SubTotalGood += parseFloat(Value)
            }
        })
        return SubTotalGood;
    }

    function AddSubTotalService() {
        var SubTotalService = 0;
        $('#QutationServiceDetail tr').each(function () {
            var Value = $(this).find('.RowTotalG').val();
            if (!isNaN(parseFloat(Value) && typeof (Value) != "undefined")) {
                SubTotalService += parseFloat(Value);
            }
        })
        return SubTotalService;
    }

    function totalGoods() {
        var TotalGood = 0;

        $('#orderdetailsitems1 tbody tr').each(function () {
            var Value = $(this).find(".FTotalG").val();
            if (!isNaN(parseFloat(Value) && typeof (Value) != "undefined")) {
                TotalGood += parseFloat(Value)
            }
        })
        return TotalGood;
    }

    function TotalService() {
        var TotalService = 0;
        $('#QutationServiceDetail tbody tr').each(function () {
            var Value = $(this).find(".FTotalG").val();
            if (!isNaN(parseFloat(Value) && typeof (Value) != "undefined")) {
                TotalService += parseFloat(Value);
            }
        })
        return TotalService;
    }

    function AsignValueT21(NewValue, Vat, InOrOut) {
        if (InOrOut == 'AddingVat') {
            if (Vat == 21) {
                var Currnt21Value = $('#BTW21').text();

                if ((Currnt21Value) != "") {
                    var v = parseFloat(Currnt21Value) + parseFloat(NewValue);
                    $('#BTW21').text(parseFloat(v).toFixed(2));
                }
                else {
                    $('#BTW21').text(NewValue);
                }
            }
            else if (Vat == 6) {
                var Currnt21Value = $('#BTW6').text();
                if ((Currnt21Value) != '') {
                    var v = parseFloat(Currnt21Value) + parseFloat(NewValue);
                    $('#BTW6').text(parseFloat(v).toFixed(2));
                }
                else {
                    $('#BTW6').text(NewValue);
                }
            }
        }
        else if (InOrOut == "Removing") {
            if (Vat == 21) {
                var Currnt21Value = $('#BTW21').text();

                if ((Currnt21Value) != "") {
                    var v = parseFloat(Currnt21Value) - parseFloat(NewValue);
                    $('#BTW21').text(parseFloat(v).toFixed(2));
                }
                else {
                    $('#BTW21').text(NewValue);
                }
            }
            else if (Vat == 6) {
                var Currnt21Value = $('#BTW6').text();
                if ((Currnt21Value) != "") {
                    var v = parseFloat(Currnt21Value) - parseFloat(NewValue);
                    $('#BTW6').text(parseFloat(v).toFixed(2));
                }
                else {
                    $('#BTW6').text(NewValue);
                }
            }
        }
    }

    $('#orderdetailsitems1').on('click', '.remove', function () {

        var currentRow = $(this).closest('tr');
        var vat = currentRow.find('.VAT  option:selected').val();
        $(this).parents('tr').remove();
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    $('#QutationServiceDetail').on('click', '.remove', function () {
        var currentRow = $(this).closest('tr');
        var vat = currentRow.find('.VAT  option:selected').val();
        $(this).parents('tr').remove();
        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    $('#SavePrint').click(function () {

        $(this).val("please wait...");

        var list = [], orderItem, CurrentRow;
        var formData = new FormData($('#frmAccount')[0]);

        var files = $("#uploadfile")[0];
        if (!validateFileSize()) {
            return true;
        }

        $('#orderdetailsitems1 .tbodyGood tr').each(function () {
           
            var CurrentRow = $(this).closest("tr");
            if (ValidateRow(CurrentRow)) {
                orderItem = {
                    ItemId: parseInt($(this).find('.product').val()),
                    Quantity: parseInt($(this).find('.quantityG').val()),
                    Type: "Goods",
                    Rate: parseInt($(this).find('.rateG').val()),
                    Total: parseFloat($(this).find('.FTotalG').val()),
                    Vat: parseFloat($(this).find('.VATG').val()),
                    RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                    InvoiceDetailId: $(this).find('#InvoiceDetailId').val(),
                }
                list.push(orderItem);
            }
        });

        $('#QutationServiceDetail .tbodyService tr').each(function () {
           
            var CurrentRow = $(this).closest("tr");
            if (ValidateRow(CurrentRow)) {
                orderItem = {
                    ItemId: $(this).find('.product').val(),
                    Quantity: parseInt($(this).find('.quantityG').val()),
                    Rate: parseFloat($(this).find('.rateG').val()),
                    Total: parseFloat($(this).find('.FTotalG').val()),
                    Description: $(this).find('.Discription').val(),
                    Type: "Service",
                    ServiceDate: $(this).find('.ServiceDate').val(),
                    Vat: parseFloat($(this).find('.VATG').val()),
                    RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                    InvoiceDetailId: $(this).find('#InvoiceDetailId').val(),
                }
                list.push(orderItem);
            }
        });


        if (list.length == 0) {
            $('#BTW6').text('');
            $('#BTW21').text('');
            $('#gtotal').text('');
            $('#gtotal').text('');
        }

        var empObj = {
            Invoice_ID: $('#Number_ID').val(),
            RefNumber: $('#ReferenceNumber').val(),
            InvoiceDate: $('#FromDate').val(),
            InvoiceDueDate: $('#DueDate').val(),
            SubTotal: $('#SubTotal').text(),
            DiscountAmount: $('#DiscountAmount').val(),
            InvoiceID: $('#InvoiceID').val(),
            TotalVat6: $('#BTW6').text(),
            TotalVat21: $('#BTW21').text(),
            Total: $('#SubTotal').text(),
            TotalAmount: $('#gtotal').text(),
            CustomerNote: $('#CustomerNote').val(),
            ContactId: $('#ConatctId').val(),
            CompanyId: $('#CompanyID').val(),
            InvoiceDescription: $('#InvoiceDescription').val(),
        };

        for (var key in empObj) {
            formData.append(key, empObj[key]);
        }
        for (var i = 0; i < list.length; i++) {
            formData.append('InvoiceDetailsTable[' + i + '][ItemId]', list[i].ItemId)
            formData.append('InvoiceDetailsTable[' + i + '][Quantity]', list[i].Quantity)
            formData.append('InvoiceDetailsTable[' + i + '][Rate]', list[i].Rate)
            formData.append('InvoiceDetailsTable[' + i + '][Total]', list[i].Total)
            formData.append('InvoiceDetailsTable[' + i + '][Vat]', list[i].Vat)
            formData.append('InvoiceDetailsTable[' + i + '][RowSubTotal]', list[i].RowSubTotal)
            formData.append('InvoiceDetailsTable[' + i + '][Type]', list[i].Type)
            formData.append('InvoiceDetailsTable[' + i + '][InvoiceDetailId]', list[i].InvoiceDetailId)
            formData.append('InvoiceDetailsTable[' + i + '][ServiceDate]', list[i].ServiceDate)
        }
        $.ajax({
            url: "/Invoice/SavePrintEdit",
            type: "POST",
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (result) {

                $("#SavePrint").val('Save + print and send and send ot yourself');
                if (result.Status == "Success") {
                    localStorage.setItem('path', result.path);
                    swal({
                        title: 'Invoice!',
                        text: 'Invoice  updated successfully!',
                        type: 'success'
                    },
                    function (isconform) {
                        window.location.href = "/Invoice/ViewInvoice?id=" + result.id;
                    });
                }
                else if (result.Status == "Fail") {
                    swal({
                        title: 'Failed!',
                        text: 'Invoice  updated Fiald!',
                        type: 'Faild'
                    });
                }
            },
            error: function (errormessage) {
                swal({
                    title: 'Failed!',
                    text: 'Invoice  updated Fiald!',
                    type: 'Faild'
                });
            }
        });

    });

    $('#saveEmail').click(function () {

        $(this).val("please wait...");

        var list = [], orderItem, CurrentRow;
        var formData = new FormData($('#frmAccount')[0]);
        var files = $("#uploadfile")[0];
        if (!validateFileSize()) {
            return true;
        }

        $('#orderdetailsitems1 .tbodyGood tr').each(function () {
           
            var CurrentRow = $(this).closest("tr");
            if (ValidateRow(CurrentRow)) {
                orderItem = {
                    ItemId: parseInt($(this).find('.product').val()),
                    Quantity: parseInt($(this).find('.quantityG').val()),
                    Type: "Goods",
                    Rate: parseInt($(this).find('.rateG').val()),
                    Total: parseFloat($(this).find('.FTotalG').val()),
                    Vat: parseFloat($(this).find('.VATG').val()),
                    RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                    InvoiceDetailId: $(this).find('#InvoiceDetailId').val(),
                }
                list.push(orderItem);
            }
        });

        $('#QutationServiceDetail .tbodyService tr').each(function () {          
            var CurrentRow = $(this).closest("tr");
            if (ValidateRow(CurrentRow)) {
                orderItem = {
                    ItemId: $(this).find('.product').val(),
                    Quantity: parseInt($(this).find('.quantityG').val()),
                    Rate: parseFloat($(this).find('.rateG').val()),
                    Total: parseFloat($(this).find('.FTotalG').val()),
                    Description: $(this).find('.Discription').val(),
                    Type: "Service",
                    ServiceDate: $(this).find('.ServiceDate').val(),
                    Vat: parseFloat($(this).find('.VATG').val()),
                    RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                    InvoiceDetailId: $(this).find('#InvoiceDetailId').val(),
                }
                list.push(orderItem);
            }
        });

        if (list.length == 0) {
            $('#BTW6').text('');
            $('#BTW21').text('');
            $('#gtotal').text('');
            $('#gtotal').text('');
        }
        var empObj = {
            Invoice_ID: $('#Number_ID').val(),
            RefNumber: $('#ReferenceNumber').val(),
            InvoiceDate: $('#FromDate').val(),
            InvoiceDueDate: $('#DueDate').val(),
            SubTotal: $('#SubTotal').text(),
            DiscountAmount: $('#DiscountAmount').val(),
            InvoiceID: $('#InvoiceID').val(),
            TotalVat6: $('#BTW6').text(),
            TotalVat21: $('#BTW21').text(),
            Total: $('#SubTotal').text(),
            TotalAmount: $('#gtotal').text(),
            CustomerNote: $('#CustomerNote').val(),
            ContactId: $('#ConatctId').val(),
            CompanyId: $('#CompanyID').val(),
            InvoiceDescription: $('#InvoiceDescription').val(),
        };

        for (var key in empObj) {
            formData.append(key, empObj[key]);
        }
        for (var i = 0; i < list.length; i++) {
            formData.append('InvoiceDetailsTable[' + i + '][ItemId]', list[i].ItemId)
            formData.append('InvoiceDetailsTable[' + i + '][Quantity]', list[i].Quantity)
            formData.append('InvoiceDetailsTable[' + i + '][Rate]', list[i].Rate)
            formData.append('InvoiceDetailsTable[' + i + '][Total]', list[i].Total)
            formData.append('InvoiceDetailsTable[' + i + '][Vat]', list[i].Vat)
            formData.append('InvoiceDetailsTable[' + i + '][RowSubTotal]', list[i].RowSubTotal)
            formData.append('InvoiceDetailsTable[' + i + '][Type]', list[i].Type)
            formData.append('InvoiceDetailsTable[' + i + '][InvoiceDetailId]', list[i].InvoiceDetailId)
            formData.append('InvoiceDetailsTable[' + i + '][ServiceDate]', list[i].ServiceDate)
        }

        $.ajax({
            url: "/Invoice/SaveEmailEdit",
            data: JSON.stringify(empObj),
            type: "POST",
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (result) {
                $("#saveEmail").val('Save + Email');
                if (result.Status == "Success") {
                    swal({
                        title: 'Invoice!',
                        text: 'Invoice save successfully!',
                        type: 'success'
                    },
                          function (isconform) {
                              window.location.href = "/invoice/EmailInvoice?id=" + result.id;
                          });
                }
                else if (result.Status == "Fail") {
                    alert(result.Message);
                }
            },
            error: function (errormessage) {

            }
        });
    });

    $('#Submit').click(function () {
        debugger;
        $(this).val("please wait...");
        var list = [], orderItem, CurrentRow;
        var formData = new FormData($('#frmAccount')[0]);
        var files = $("#uploadfile")[0];
        if (!validateFileSize()) {
            $("#Submit").val('Save Draft');
            return true;
        }

        $('#orderdetailsitems1 .tbodyGood tr').each(function () { 
            var CurrentRow = $(this).closest("tr");
            if (ValidateRow(CurrentRow)) {
                orderItem = {
                    ItemId: parseInt($(this).find('.product').val()),
                    Quantity: parseInt($(this).find('.quantityG').val()),
                    Type: "Goods",
                    Rate: parseInt($(this).find('.rateG').val()),
                    Total: parseFloat($(this).find('.FTotalG').val()),
                    Vat: parseFloat($(this).find('.VATG').val()),
                    RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                    InvoiceDetailId: $(this).find('#InvoiceDetailId').val(),
                }
                list.push(orderItem);
            }
        });

        $('#QutationServiceDetail .tbodyService tr').each(function () {           
            var CurrentRow = $(this).closest("tr");
            if (ValidateRow(CurrentRow)) {
                orderItem = {
                    ItemId: $(this).find('.product').val(),
                    Quantity: parseInt($(this).find('.quantityG').val()),
                    Rate: parseFloat($(this).find('.rateG').val()),
                    Total: parseFloat($(this).find('.FTotalG').val()),
                    Description: $(this).find('.Discription').val(),
                    Type: "Service",
                    ServiceDate: $(this).find('.ServiceDate').val(),
                    Vat: parseFloat($(this).find('.VATG').val()),
                    RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                    InvoiceDetailId: $(this).find('#InvoiceDetailId').val(),
                }
                list.push(orderItem);
            }
        });



        if (list.length == 0) {
            $('#BTW6').text('');
            $('#BTW21').text('');
            $('#gtotal').text('');
            $('#gtotal').text('');
        }

        var empObj = {
            Invoice_ID: $('#Number_ID').val(),
            RefNumber: $('#ReferenceNumber').val(),
            InvoiceDate: $('#FromDate').val(),
            InvoiceDueDate: $('#DueDate').val(),
            SubTotal: $('#SubTotal').text(),
            DiscountAmount: $('#DiscountAmount').val(),
            InvoiceID: $('#InvoiceID').val(),
            TotalVat6: $('#BTW6').text(),
            TotalVat21: $('#BTW21').text(),
            Total: $('#SubTotal').text(),
            TotalAmount: $('#gtotal').text(),
            CustomerNote: $('#CustomerNote').val(),
            ContactId: $('#ConatctId').val(),
            CompanyId: $('#CompanyID').val(),
            InvoiceDescription: $('#InvoiceDescription').val(),
        };

        for (var key in empObj) {
            formData.append(key, empObj[key]);
        }
        for (var i = 0; i < list.length; i++) {
            formData.append('InvoiceDetailsTable[' + i + '][ItemId]', list[i].ItemId)
            formData.append('InvoiceDetailsTable[' + i + '][Quantity]', list[i].Quantity)
            formData.append('InvoiceDetailsTable[' + i + '][Rate]', list[i].Rate)
            formData.append('InvoiceDetailsTable[' + i + '][Total]', list[i].Total)
            formData.append('InvoiceDetailsTable[' + i + '][Vat]', list[i].Vat)
            formData.append('InvoiceDetailsTable[' + i + '][RowSubTotal]', list[i].RowSubTotal)
            formData.append('InvoiceDetailsTable[' + i + '][Type]', list[i].Type)
            formData.append('InvoiceDetailsTable[' + i + '][InvoiceDetailId]', list[i].InvoiceDetailId)
            formData.append('InvoiceDetailsTable[' + i + '][ServiceDate]', list[i].ServiceDate)
        }

        $.ajax({
            url: "/Invoice/Edit",
            data: JSON.stringify(empObj),
            type: "POST",
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (result) {

                $("#Submit").val('Save Draft');
                if (result.Status == "Success") {
                    swal({
                        title: 'Invoice!',
                        text: 'Invoice save successfully!',
                        type: 'success'
                    },
                         function (isconform) {
                             window.location.href = "/Invoice/ViewInvoice?id=" + result.id;
                         });


                }
                else if (result.Status == "Fail") {
                    alert(result.Message);

                }
            },

            error: function (errormessage) {

            }

        });

    });

    var QID = 0;

    $(document).on('click', '#btnRemoveGood', function () {

        var currentRow1 = $(this).closest('tr');
        var row = $(this).closest('tr');
        Remove(row);
        $(this).closest("tr").remove();

        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();


    });

    $(document).on('click', '#btnRemoveService', function () {

        var currentRow1 = $(this).closest('tr');
        var row = $(this).closest('tr');
        Remove(row);
        $(this).closest("tr").remove();

        CombineTotalAndSubtotal();
        CombineTotal();
        CalculateVateTotal();
    });

    function Remove(CurrentRow) {

        var QIDId = CurrentRow.find('#InvoiceDetailId').val();
        var total1 = CurrentRow.find('.FTotalG').val();
        var vat = CurrentRow.find('.VATG').val();
        QID = $('#InvoiceID').val();

        var data = JSON.stringify({
            InvoiceID: QID,
            InvoiceDetailsId: QIDId,
            vat: vat,
            total: total1
        })
        $.ajax({
            url: "/Invoice/DeleteInvoice",
            type: "POST",
            async: false,
            contentType: "application/json;charset=utf-8",
            dataType: "json",
            data: data,
            success: function (data) {
                if (data.Status == "Success") {


                    swal({
                        title: 'Invoice!',
                        text: 'Row deleted successfully!',
                        type: 'success'
                    });

                }
                else if (data.Status == "Fail") {

                    swal({
                        title: 'Invoice!',
                        text: 'Fialied to delete row!',
                        type: 'danger'
                    });

                }
            },
            Error: function (errormessage) {
                alert(errormessage);
            }

        });

    }

    function ValidateRow(CurrentRow) {

        var Isvalid = true;
        var Produectid = 0, quantityG = 0, varrateG = 0;
        Produectid = CurrentRow.find('.product').val();
        quantityG = CurrentRow.find('.quantityG ').val();
        varrateG = CurrentRow.find('.rateG ').val();
        if (parseInt(Produectid) == 0 || Produectid == "") {
            Isvalid = false;
        }
        if (parseInt(quantityG) == 0 || quantityG == "") {
            Isvalid = false;
        }
        if (parseInt(varrateG) == 0 || varrateG == "") {
            Isvalid = false;
        }
        return Isvalid;
    }

    $('#txtUploadFile12').on('change', function (e) {
        var fileUpload = $("#txtUploadFile12").get(0);
        var files = fileUpload.files;
        var formData = new FormData($('#frmAccount')[0]);
        var IsvalidSixze = validateFileSize();

        if (IsvalidSixze == false) {
            return true;
        }
        else {
            for (var i = 0; i < files.length; i++) {
                formData.append(files[i].name, files[i]);
            }
            formData.append("InvoiceID", parseInt($('#InvoiceID').val()));
            $.ajax({
                url: '/Invoice/UploadFiles',
                type: "POST",
                contentType: false,
                processData: false,
                data: formData,
                async: false,
                success: function (result) {
                    if (result != "") {
                        $('#upload123').append("<tr><td><span class='badge badge-info FileName'><i class='icon-minus-sign'></i>" + result.FileName + "</span></td><td><button class='btn btn-danger remove'  type='button'>x</button></td><td><input type='hidden' class='form-control filepath' value='" + result.FilePath + "' name='FilePath'></td>")
                        var fileUpload = $("#txtUploadFile12").val('');
                    }
                },
                error: function (err) {
                    alert(err.statusText);
                }
            });
        }
    });

    function validateFileSize() {
        var Isvalid = true;
        if (window.File && window.FileReader && window.FileList && window.Blob) {

            if (document.getElementById("txtUploadFile12").files.length != 0) {

                //get the file size and file type from file input field
                var fsize = $('#txtUploadFile12')[0].files[0].size;
                var ftype = $('#txtUploadFile12')[0].files[0].type;
                var fname = $('#txtUploadFile12')[0].files[0].name;

                if (fsize > 1048576) //do something if file size more than 1 mb (1048576)
                {
                    Isvalid = false;

                    alert("Type :" + ftype + " | " + fsize + " bites\n(File: " + fname + ") Too big!");
                }
                else {
                    Isvalid = true;
                }
            }
            return Isvalid;
        }
    }

    $(document).on('click', '.remove', function () {
      
        var current = $(this).closest("tr");

        var Name = current.find(".FileName").val();

        $.ajax({
            url: "/Invoice/DeleteFile",
            type: "POST",
            data: JSON.stringify({ Id: $('#InvoiceID').val(), FileName: Name }),
            contentType: "application/json",
            dataType: "json",
            success: function (result) {
                if (result == "Success") {
                    current.remove();
                }
            },
            error: function (err) {
                alert(err.statusText);
            }
        });

    });

    $(document).ready(function () {
        $('#participantTable #DeleteFile').click(function (e) {
            var Current = $(this).closest("tr")
            e.preventDefault();
            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this imaginary file!",
                type: "warning",
                showCancelButton: true,
                confirmButtonClass: "btn-danger",
                confirmButtonText: "Yes, delete it!",
                cancelButtonText: "No, cancel!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
              function (isConfirm) {
                  if (isConfirm) {
                      var FileName = Current.find('.FileName').val();
                      DeleteFileFromFolder(FileName, Current);
                      swal("Deleted!", "Your imaginary file has been deleted.", "success");
                  } else {
                      swal("Cancelled", "Your imaginary file is safe :)", "error");
                  }
              });
        });
    });

    function DeleteFileFromFolder(FilenameToDelete, currentRow) {
        $.ajax({
            url: "/Invoice/DeleteFile",
            type: "POST",
            data: JSON.stringify({ Id: $('#InvoiceID').val(), FileName: FilenameToDelete }),
            contentType: "application/json",
            dataType: "json",
            success: function (result) {
                if (result == "Success") {
                    currentRow.remove();
                }
            },
            error: function (err) {
                alert(err.statusText);
            }
        });
    }


    $(document).ready(function () {
        $('.FromDate  ').datepicker({
            changeMonth: true,
            changeYear: true,
            gotoCurrent: true,
            datetime: new Date(),
            dateFormat: 'dd/mm/yy',
        });
        if ($(this).hasClass('birthdate')) {
            $(this).datepicker('option', 'yearRange', '1980:c');
            $(this).datepicker('option', 'defaultDate', '-10y');
        }
    });
</script>
