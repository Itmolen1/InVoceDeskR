@model InvoiceDiskLast.Models.MVCQutationViewModel

@{
    ViewBag.Title = "AddOrEdit";
}

<style>
    .pt-3-half {
        padding-top: 1.4rem;
    }
</style>


<script src="~/Scripts/jquery-1.10.2.js"></script>
<script src="~/Scripts/jquery-1.10.2.min.js"></script>

<body class="well">
    @{

        var Contectdatas = ViewBag.Contentdata;
        var CompanyDatas = ViewBag.Companydata;

    }
    @if (ViewBag.edit != null)
    {
        <div class="container">
            @Html.HiddenFor(model => model.QutationID, new { htmlAttributes = new { id = "qutationId" } })
            <input type="hidden" value="@Contectdatas.ContactsId" id="contactId" />
            <div class="row">

                <div class="col-sm-12" style="background-color:white;margin-top:40px">
                    <div class="row">
                        <div class="col-sm-1"></div>
                        <div class="col-sm-3">
                            <div class="mydiv">
                                <img src="@Url.Content("~/Images/"+ @CompanyDatas.CompanyLogo)" id="targetImg" style="border:none" />
                            </div>
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />

                            @Contectdatas.ContactName
                            <br />
                            @Contectdatas.ContactAddress
                            <br />
                            @Contectdatas.PostalCode, @Contectdatas.StreetNumber @Contectdatas.City,
                            <br />
                            @Contectdatas.PostalCode

                        </div>
                        <div class="col-sm-4"></div>
                        <div class="col-sm-4">
                            <br />
                            <br />
                            <br />
                            <h5 style="margin-left:125px">@CompanyDatas.CompanyName</h5>
                            <hr />
                            <div class="row">
                                <div class="col-sm-2"></div>
                                <div class="col-sm-2 pull-left">Kvk nr:</div>
                                <div class="col-sm-8">@CompanyDatas.KVK</div>
                            </div>
                            <div class="row">
                                <div class="col-sm-1"></div>
                                <div class="col-sm-3"><div class="pull-right"> BTW nr:</div></div>
                                <div class="col-sm-8">@CompanyDatas.BTW</div>
                            </div>
                            <div class="row">
                                <div class="col-sm-2"></div>
                                <div class="col-sm-2 pull-right"><div class="pull-right">Bank:</div></div>
                                <div class="col-sm-8">@CompanyDatas.BankName</div>
                            </div>
                            <div class="row">
                                <div class="col-sm-2"></div>
                                <div class="col-sm-2 pull-right"><div class="pull-right">IBAN:</div></div>
                                <div class="col-sm-8">@CompanyDatas.IBANNumber</div>
                            </div>
                            <div class="row">
                                <div class="col-sm-2"></div>
                                <div class="col-sm-2 pull-right"><div class="pull-right">BIC:</div></div>
                                <div class="col-sm-8">@CompanyDatas.BIC</div>
                            </div>
                            <div class="row">
                                <div class="col-sm-2"></div>
                                <div class="col-sm-2"><div class="pull-right">Tel:</div></div>
                                <div class="col-sm-8">@CompanyDatas.CompanyPhone</div>
                            </div>

                            <div class="row">
                                <div class="col-sm-2"></div>
                                <div class="col-sm-2"><div class="pull-right">Cel:</div></div>
                                <div class="col-sm-8">@CompanyDatas.CompanyCell</div>
                            </div>

                            <div class="row">
                                <div class="col-sm-1"></div>
                                <div class="col-sm-3 pull-right"><div class="pull-right">E-mail:</div></div>
                                <div class="col-sm-8">@CompanyDatas.CompanyCell</div>
                            </div>

                            <div class="row">
                                <div class="col-sm-1"></div>
                                <div class="col-sm-3 pull-right"><div class="pull-right">Website:</div></div>
                                <div class="col-sm-8">@CompanyDatas.Website</div>
                            </div>

                            <div class="row">

                                <div class="col-sm-4 pull-right"><div class="pull-right">Bezoekadres:</div></div>
                                <div class="col-sm-8">
                                    @CompanyDatas.CompanyAddress<br />
                                    @CompanyDatas.PostalCode   @CompanyDatas.CompanyCity <br />
                                    @CompanyDatas.CompanyCountry
                                </div>
                            </div>
                        </div>
                    </div>


                    <div class="row">
                        <div class="col-sm-1"></div>
                        <div class="col-sm-11">
                            <h4 style="color:skyblue">Qutation</h4>
                            <div class="form-horizontal">
                                <div class="row">
                                    <div class="col-sm-2">Qutation Number:</div>
                                    <div class="col-sm-4">

                                        @Html.EditorFor(model => model.QutationDate, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control MAterialDatepicker", id = "QutationDate" } })
                                        @Html.ValidationMessageFor(model => model.QutationDate, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="col-sm-6"></div>
                                </div>

                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2">Qutation Number:</div>
                                    <div class="col-sm-4">

                                        @Html.EditorFor(model => model.Qutation_ID, new { htmlAttributes = new { @class = "form-control", id = "Qutation_ID" } })
                                        @Html.ValidationMessageFor(model => model.Qutation_ID, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="col-sm-6"></div>
                                </div>

                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2">Due Date:</div>
                                    <div class="col-sm-4">

                                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control MAterialDatepicker", id = "DueDate", title = "Due Date" } })
                                        @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="col-sm-6"></div>
                                </div>


                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2">Reference Number:</div>
                                    <div class="col-sm-4">

                                        @Html.EditorFor(Model => Model.RefNumber, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control", id = "RefNumber" } })
                                        @Html.ValidationMessageFor(model => model.RefNumber, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-6"></div>
                                </div>

                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2"><a href="#"> @*Add Discount:*@</a></div>
                                    <div class="col-sm-4">

                                        @*@Html.EditorFor(model => model.DiscountAmount, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control", id = "DiscountAmount" } })
                                            @Html.ValidationMessageFor(model => model.DiscountAmount, "", new { @class = "text-danger" })*@
                                    </div>
                                    <div class="col-sm-6"></div>
                                </div>

                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2"><a href="#"> @*Add VAT:*@</a></div>
                                    <div class="col-sm-4">
                                        @*@Html.EditorFor(model => model.Vat, new { htmlAttributes = new { @class = "form-control", id = "AddVat" } })
                                            @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" })*@
                                    </div>
                                    <div class="col-sm-6"></div>
                                </div>




                                <div class="row">
                                    <table class="table" id="orderdetailsitems">
                                        <thead class="thead-dark">
                                            <tr>
                                                <th>
                                                    Goods
                                                </th>
                                                <th>
                                                    Quantity
                                                </th>
                                                <th>
                                                    Price
                                                </th>
                                                <th>
                                                    Total
                                                </th>
                                                <th>
                                                    Vat
                                                </th>
                                                <th>
                                                    Action
                                                </th>
                                                <th>

                                                </th>
                                                <th>

                                                </th>

                                            </tr>


                                        </thead>
                                        <tbody class="tbody">

                                            @if (ViewBag.QutationDatailsList != null)
                                            {
                                                foreach (var item in ViewBag.QutationDatailsList)
                                                {

                                                    <tr id="@item.QutationDetailId">

                                                        <td>

                                                            <select Id="SelectProductQutation" class="product form-control pClass" style="width:216px !important;font-size:12px">
                                                                <option value="0">Select Item..</option>
                                                                @foreach (var product in ViewBag.Product)
                                                                {
                                                                    <option value="@product.ProductId" @(product.ProductId == item.ItemId ? "selected='selected'" : "")>@product.ProductName</option>
                                                                }
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <input type="text" class="quantity form-control" id="Quantity" value="@item.Quantity" style="font-size:12px" />
                                                        </td>

                                                        <td>
                                                            <input type="text" class="rate form-control" id="Rate" value="@item.Rate" style="font-size:12px" />
                                                        </td>
                                                        <td>
                                                            <input type="text" class="FTotal form-control" id="FTotal" value="@item.Total" readonly="readonly" style="font-size:12px" />

                                                        </td>
                                                        <td>
                                                            <select id="SelectVAT" name="NewsCategoriesID" class="VAT  form-control" style="width:80px;font-size:12px">

                                                                @foreach (var item1 in ViewBag.VatDrop)
                                                                {
                                                                    <option value="@item1.Vat1" @(item1.Vat1 == item.Vat ? "selected='selected'" : "")>@item1.Name</option>
                                                                }
                                                            </select>

                                                        </td>
                                                        <td>
                                                            <button type="button" id="RemoveEdit" class="btn btn-danger">Remove</button>
                                                        </td>
                                                        <td>
                                                            <input type="hidden" class="QutationDetailId" value="@item.QutationDetailId" />

                                                        </td>
                                                        <td>
                                                            <input type="hidden" class="QutationID" value="@item.QutationID" />

                                                        </td>


                                                    </tr>
                                                }
                                            }



                                        </tbody>
                                        <tr id="mainrow">
                                            <td>
                                                <select id="SelectProductQutation" class="product form-control pClass" style="font-size:12px"></select>
                                            </td>
                                            <td>
                                                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @style = "font-size:12px", @type = "text", @class = "quantity form-control", id = "QuantityE" } })
                                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                            </td>
                                            <td>


                                                @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @style = "font-size:12px", @class = "rate form-control", id = "Rate" } })
                                                @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })


                                            </td>
                                            <td>

                                                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @style = "font-size:12px", @class = "FTotal form-control", id = "FTotalE", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                                            </td>
                                            <td>

                                                <select id="SelectVAT" class="VAT form-control" style="width:80px;font-size:12px">
                                                    <option>0</option>
                                                    <option>6</option>
                                                    <option>21</option>
                                                </select>

                                            </td>
                                            <td>

                                                <input type="button" id="add" value="add" class="btn btn-success" style="width:80px;font-size:12px" />

                                        </tr>
                                    </table>
                                </div>
                                <div class="row">
                                    <div id="OrderItems">
                                        <table class="table" id="orderdetailsitems"></table>
                                        <span id="orderItemError" style="color:red"></span>
                                    </div>

                                </div>

                                <hr />

                                <div class="row">
                                    <div class="col-sm-8">
                                    </div>
                                    <div class="col-sm-2">Sub Total:</div>
                                    <div class="col-sm-2">
                                        <label id="SubTotal">@Model.SubTotal</label>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="col-sm-8">
                                    </div>
                                    <div class="col-sm-2">Total excel BTW:</div>
                                    <div class="col-sm-2">
                                        <label id="TotalBTW">@Model.SubTotal</label>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-8">
                                    </div>
                                    <div class="col-sm-2">BTW0%:</div>
                                    <div class="col-sm-2">
                                        <label id="btwo">0.00</label>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-8">
                                    </div>
                                    <div class="col-sm-2">BTW 6%:</div>
                                    <div class="col-sm-2">
                                        <label id="BTW6">@Model.TotalVat6</label>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-8">
                                    </div>
                                    <div class="col-sm-2">BTW 21%:</div>
                                    <div class="col-sm-2">
                                        <label id="BTW21">@Model.TotalVat21</label>

                                    </div>
                                </div>
                                <hr />
                                <div class="row">
                                    <div class="col-sm-2">Customer Notes:</div>
                                    <div class="col-sm-6">
                                        @Html.TextAreaFor(model => model.CustomerNote, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control", id = "CustomerNote" } })
                                        @Html.ValidationMessageFor(model => model.CustomerNote, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-2">Grand Total:</div>
                                    <div class="col-sm-2">
                                        <span class=""><b>&euro;:</b></span><label id="gtotal">@Model.TotalAmount</label>

                                    </div>
                                </div>

                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2"></div>
                                    <div class="col-sm-6">

                                    </div>
                                    <div class="col-sm-2"></div>
                                    <div class="col-sm-2">

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <hr />

                                <div class="row">
                                    <div class="col-xs-2"><input id="SubmitEdit" type="button" value="Save draft" class="btn btn-success" style="margin:0px 5px" /></div>
                                    <div class="col-xs-2"><input id="saveEmailedit" type="button" value="Save + email" class="btn btn-success" style="margin:0px 5px" /></div>
                                    @*<div class="col-xs-3"><input id="savesendbyemail" type="button" value="Save + send by email " class="btn btn-primary" style="margin:0px 5px" /></div>*@
                                    <div class="col-xs-3"><input id="saveprintandsendtoyourself" type="button" value="Save + print and send and send ot yourself" class="btn btn-success" style="margin:0px 5px" /></div>

                                    <div class="col-sm-2"></div>
                                    @*<div class="col-sm-1"></div>
                                        <div class="col-sm-2"></div>
                                        <div class="col-sm-2"></div>*@
                                </div>

                            </div>

                        </div>
                    </div>

                </div>
            </div>


        </div>
    }
    else
    {
        <div class="container">
            @Html.HiddenFor(model => model.QutationID, new { htmlAttributes = new { id = "qutationId" } })
            <input type="hidden" value="@Contectdatas.ContactsId" id="contactId" />
            <div class="row">

                <div class="col-sm-12" style="background-color:white;margin-top:40px">
                    <div class="row">
                        <div class="col-sm-1"></div>
                        <div class="col-sm-3">
                            <div class="mydiv">
                                <img src="@Url.Content("~/Images/"+@CompanyDatas.CompanyLogo)" id="targetImg" style="border:none" />
                            </div>
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />
                            <br />


                            @Contectdatas.ContactName
                            <br />
                            @Contectdatas.ContactAddress
                            <br />
                            @Contectdatas.PostalCode, @Contectdatas.StreetNumber @Contectdatas.City,
                            <br />
                            @Contectdatas.PostalCode
                            <br />
                            @Contectdatas.PostalCode

                        </div>
                        <div class="col-sm-4"></div>
                        <div class="col-sm-4">
                            <br />
                            <br />
                            <br />
                            <h5 style="margin-left:125px">@CompanyDatas.CompanyName</h5>
                            <hr />
                            <div class="row">

                                <div class="col-sm-4 text-right">Kvk nr:</div>
                                <div class="col-sm-8">@CompanyDatas.KVK</div>
                            </div>
                            <div class="row">

                                <div class="col-sm-4"><div class="text-right"> BTW nr:</div></div>
                                <div class="col-sm-8">@CompanyDatas.BTW</div>
                            </div>
                            <div class="row">

                                <div class="col-sm-4 text-right"><div class="pull-right">Bank:</div></div>
                                <div class="col-sm-8">@CompanyDatas.BankName</div>
                            </div>
                            <div class="row">

                                <div class="col-sm-4 text-right"><div class="pull-right">IBAN:</div></div>
                                <div class="col-sm-8">@CompanyDatas.IBANNumber</div>
                            </div>
                            <div class="row">

                                <div class="col-sm-4 text-right"><div class="pull-right">BIC:</div></div>
                                <div class="col-sm-8">@CompanyDatas.BIC</div>
                            </div>
                            <div class="row">

                                <div class="col-sm-4"><div class="text-right">Tel:</div></div>
                                <div class="col-sm-8">@CompanyDatas.CompanyPhone</div>
                            </div>

                            <div class="row">

                                <div class="col-sm-4"><div class="text-right">Cel:</div></div>
                                <div class="col-sm-8">@CompanyDatas.CompanyCell</div>
                            </div>

                            <div class="row">

                                <div class="col-sm-4 text-right"><div class="pull-right">E-mail:</div></div>
                                <div class="col-sm-8">@CompanyDatas.CompanyCell</div>
                            </div>

                            <div class="row">

                                <div class="col-sm-4 text-right"><div class="pull-right">Website:</div></div>
                                <div class="col-sm-8">@CompanyDatas.Website</div>
                            </div>

                            <div class="row">

                                <div class="col-sm-4 text-right">Bezoekadres:</div>
                                <div class="col-sm-8">
                                    @CompanyDatas.CompanyAddress<br />
                                    @CompanyDatas.PostalCode   @CompanyDatas.CompanyCity <br />
                                    @CompanyDatas.CompanyCountry
                                </div>
                            </div>


                        </div>
                    </div>


                    <div class="row">
                        <div class="col-sm-1"></div>
                        <div class="col-sm-11">
                            <h4 style="color:skyblue">Qutation</h4>
                            <div class="form-horizontal">
                                <div class="row">
                                    <div class="col-sm-2">Qutation Date:</div>
                                    <div class="col-sm-3">

                                        @Html.EditorFor(model => model.QutationDate, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control MAterialDatepicker", id = "QutationDate" } })
                                        @Html.ValidationMessageFor(model => model.QutationDate, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="col-sm-7"></div>
                                </div>

                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2">Quation Number:</div>
                                    <div class="col-sm-3">

                                        @Html.EditorFor(model => model.Qutation_ID, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control", id = "Qutation_ID" } })
                                        @Html.ValidationMessageFor(model => model.Qutation_ID, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="col-sm-7"></div>
                                </div>



                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2">Due Date:</div>
                                    <div class="col-sm-3">

                                        @Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control MAterialDatepicker", id = "DueDate", title = "Due Date" } })
                                        @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })

                                    </div>
                                    <div class="col-sm-7"></div>
                                </div>

                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2">Reference Number:</div>
                                    <div class="col-sm-3">

                                        @Html.EditorFor(Model => Model.RefNumber, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control", id = "RefNumber" } })
                                        @Html.ValidationMessageFor(model => model.RefNumber, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-7"></div>
                                </div>

                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2"><a href="#">@*Add Discount:*@</a></div>
                                    <div class="col-sm-3">

                                        @*@Html.EditorFor(model => model.DiscountAmount, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control", id = "DiscountAmount" } })
                                            @Html.ValidationMessageFor(model => model.DiscountAmount, "", new { @class = "text-danger" })*@
                                    </div>
                                    <div class="col-sm-7"></div>
                                </div>

                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2"><a href="#"> @*Add VAT:*@</a></div>
                                    <div class="col-sm-3">
                                        @*@Html.EditorFor(model => model.Vat, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control", id = "AddVat" } })
                                            @Html.ValidationMessageFor(model => model.Vat, "", new { @class = "text-danger" })*@
                                    </div>
                                    <div class="col-sm-7"></div>
                                </div>




                                <div class="row">
                                    <table class="table" id="orderdetailsitems">
                                        <thead class="thead-dark">
                                            <tr>
                                                <th>
                                                    Goods
                                                </th>
                                                <th>
                                                    Quantity
                                                </th>
                                                <th>
                                                    Price
                                                </th>
                                                <th>
                                                    Total
                                                </th>
                                                <th>
                                                    Vat
                                                </th>
                                                <th>
                                                    Action
                                                </th>
                                                <th>
                                                </th>

                                                <th>

                                                </th>
                                            </tr>


                                        </thead>
                                        <tbody class="tbody">


                                            @if (ViewBag.QutationDatailsList != null)
                                            {
                                                foreach (var item in ViewBag.QutationDatailsList)
                                                {

                                                    <tr id="@item.QutationDetailId">

                                                        <td>

                                                            <select Id="SelectProductQutation" class="product form-control" style="width:216px !important;font-size:12px">
                                                                <option value="0">Select Item..</option>
                                                                @foreach (var product in ViewBag.Product)
                                                                {
                                                                    <option value="@product.ProductId" @(product.ProductId == item.ItemId ? "selected='selected'" : "")>@product.ProductName</option>
                                                                }
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <input type="text" class="quantity form-control" id="Quantity" value="@item.Quantity" style="font-size:12px" />
                                                        </td>

                                                        <td>
                                                            <input type="text" class="rate form-control" id="Rate" value="@item.Rate" style="font-size:12px" />
                                                        </td>
                                                        <td>
                                                            <input type="text" class="FTotal form-control" id="FTotal" value="@item.Total" readonly="readonly" style="font-size:12px" />

                                                        </td>
                                                        <td>
                                                            <select id="SelectVAT" name="NewsCategoriesID" class="VAT  form-control" style="width:80px;font-size:12px">

                                                                @foreach (var item1 in ViewBag.VatDrop)
                                                                {
                                                                    <option value="@item1.Vat1" @(item1.Vat1 == item.Vat ? "selected='selected'" : "")>@item1.Name</option>
                                                                }
                                                            </select>

                                                        </td>
                                                        <td>
                                                            <button type="button" id="RemoveEdit" class="btn btn-danger">Remove</button>
                                                        </td>
                                                        <td>
                                                            <input type="hidden" class="QutationDetailId" value="@item.QutationDetailId" />

                                                        </td>
                                                        <td>
                                                            <input type="hidden" class="QutationID" value="@item.QutationID" />

                                                        </td>


                                                    </tr>
                                                }
                                            }

                                        </tbody>
                                        <tr id="mainrow">
                                            <td>
                                                <select id="SelectProductQutation" class="product form-control pClass" style="width: 235px;font-size:12px"></select>
                                            </td>
                                            <td>
                                                @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @style = "font-size:12px", @type = "text", @class = "quantity form-control", id = "Quantity" } })
                                                @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                            </td>
                                            <td>


                                                @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @style = "font-size:12px", @class = "rate form-control", id = "Rate" } })
                                                @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })


                                            </td>
                                            <td>

                                                @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @style = "font-size:12px", @class = "FTotal form-control", id = "FTotal", @readonly = "readonly" } })
                                                @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                                            </td>
                                            <td>

                                                <select id="SelectVAT" class="VAT form-control" style="width:80px;font-size:12px">
                                                    <option>0</option>
                                                    <option>6</option>
                                                    <option>21</option>
                                                </select>

                                            </td>
                                            <td>

                                                <input type="button" id="add" value="add" class="btn btn-success" style="width:80px" />

                                        </tr>
                                    </table>
                                </div>
                                <div class="row">
                                    <div id="OrderItems">
                                        <table class="table" id="orderdetailsitems"></table>
                                        <span id="orderItemError" style="color:red"></span>
                                    </div>

                                </div>

                                <hr />

                                <div class="row">
                                    <div class="col-sm-8">
                                    </div>
                                    <div class="col-sm-2">Sub Total:</div>
                                    <div class="col-sm-2">
                                        <label id="SubTotal">@Model.SubTotal</label>
                                    </div>
                                </div>


                                <div class="row">
                                    <div class="col-sm-8">
                                    </div>
                                    <div class="col-sm-2">Totaal excel btw:</div>
                                    <div class="col-sm-2">
                                        <label id="TotalBTW">@Model.SubTotal</label>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-8">
                                    </div>
                                    <div class="col-sm-2">BTW0%:</div>
                                    <div class="col-sm-2">
                                        <label id="btwo">0.00</label>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-8">
                                    </div>
                                    <div class="col-sm-2">BTW 6%:</div>
                                    <div class="col-sm-2">
                                        <label id="BTW6">@Model.TotalVat6</label>

                                    </div>
                                </div>

                                <div class="row">
                                    <div class="col-sm-8">
                                    </div>
                                    <div class="col-sm-2">BTW 21%:</div>
                                    <div class="col-sm-2">
                                        <label id="BTW21">@Model.TotalVat21</label>

                                    </div>
                                </div>
                                <hr />
                                <div class="row">
                                    <div class="col-sm-2">Klant opmerking:</div>
                                    <div class="col-sm-6">
                                        @Html.TextAreaFor(model => model.CustomerNote, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control", id = "CustomerNote" } })
                                        @Html.ValidationMessageFor(model => model.CustomerNote, "", new { @class = "text-danger" })
                                    </div>
                                    <div class="col-sm-2">Grand Total:</div>
                                    <div class="col-sm-2">
                                        <span class=""><b>&euro;</b></span><label id="gtotal">@Model.TotalAmount</label>

                                    </div>
                                </div>

                                <div class="row" style="margin-top:3px">
                                    <div class="col-sm-2"></div>
                                    <div class="col-sm-6">

                                    </div>
                                    <div class="col-sm-2"></div>
                                    <div class="col-sm-2">

                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-sm-12">
                                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <hr />

                                <div class="row">
                                    <div class="col-xs-2"><input id="Submit" type="button" value="Save draft" class="btn btn-success" style="margin:0px 5px" /></div>
                                    <div class="col-xs-2"><input id="saveEmail" type="button" value="Save + email" class="btn btn-success" style="margin:0px 5px" /></div>
                                    @*<div class="col-xs-3"><input id="savesendbyemail" type="button" value="Save +send by email " class="btn btn-primary" style="margin:0px 5px" /></div>*@
                                    <div class="col-xs-3"><input id="saveprintandsendtoyourselfsave" type="button" value="Save + print and send and send ot yourself" class="btn btn-success" style="margin:0px 5px" /></div>

                                    <div class="col-xs-2"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    }
</body>










<script>

    var currentRow1 = "";
    var r = "";
    $(document).ready(function () {

        function myFunction() {
            document.getElementById('CurrentDate').value = Date();
        }

        $(document).on('change', '#orderdetailsitems .VAT', function () {
            currentRow1 = $(this).closest("tr");
            calculatevat();
            SUMOFALLPRODUCT();
            sumofGrandModel();
        });

        LoadProduct();

        $("#add").click(function () {

            currentRow1 = $(this).closest("tr");

            var isAllValid = true;
            if ($("#mainrow #SelectProductQutation").val() == "0") {
                isAllValid = false;
                alert("Please select Item");
                return;
            }

            var isAllValid = true;
            if ($("#mainrow .quantity").val() == 0) {
                isAllValid = false;

                alert("Please provide quantity");
                return;
            }
            var isAllValid = true;
            if ($("#mainrow .rate").val() == 0) {
                isAllValid = false;
                alert("Please select provide rate");
                return;
            }



            if (isAllValid) {
                var $newRow = $("#mainrow").clone().removeAttr('id');
                $('.product', $newRow).val($("#SelectProductQutation").val());
                $('.VAT', $newRow).val($("#SelectVAT").val());

                //Replace add button with remove button
                $("#add", $newRow).addClass('remove').val('Remove').removeClass('btn-success').addClass('btn-danger');

                //Remove id attribute from new clone row

                $("#SelectProductQutation,#Quantity,#Rate,#FTotal,#SelectVAT", $newRow).removeAttr('id');

                $('span.error', $newRow).remove();

                $('#orderdetailsitems').append($newRow);


                $(".FTotal").prop('disabled', true);

                $('#mainrow #SelectProductQutation').val('0');
                $('#mainrow #QuantityE').val('');
                $('#mainrow #Rate').val('');
                $('#mainrow .FTotal').val('');
                $('#mainrow .quantity').val('');

                if ($('#orderItemError').text != '') {
                    $('#orderItemError').text('');
                }
                $('#mainrow #SelectVAT').val(0);
                calculatevat();
                SUMOFALLPRODUCT();
                sumofGrandModel();

            }
        });




        $(document).ready(function () {

            $(document).on('click', '#RemoveEdit', function () {
                debugger;

                var row = $(this).closest('tr');

                var QIDId = row.find('td').find('.QutationDetailId').val();
                var total1 = row.find('td').find('.FTotal').val();
                var vat = row.find('td').find('.VAT').val();
                var QID = row.find('td').find('.QutationID').val();

                var data = JSON.stringify({
                    QutationId: QID,
                    QutationDetailID: QIDId,
                    vat: vat,
                    total: total1
                })
                $.ajax({
                    url: "/MVCQutation/DeleteQuatation",
                    type: "POST",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    data: data,
                    success: function (data) {
                        if (data.Status == "Success") {
                            $("#" + QIDId).remove();
                            calculatevat();
                            SUMOFALLPRODUCT();
                            sumofGrandModel();
                            swal({
                                title: 'Qutation!',
                                text: 'Qutation delete successfully!',
                                type: 'success'
                            });

                        }
                        else if (data.Status == "Fail") {

                            swal({
                                title: 'Qutation!',
                                text: 'fail to delete qutation!',
                                type: 'danger'
                            });

                        }
                    },
                    Error: function (errormessage) {
                        alert(errormessage);
                    }

                });
            });
        });

        $("#SubmitEdit").click(function () {
            var valid = validateQutationAddOrEdit();

            if (valid != true) {
                return true;
            }
            else {
                var isAllValid = validateQutationAddOrEdit();
                $('#orderItemError').text('');
                var list = [];
                var errorItemCount = 0;
                $('#orderdetailsitems .tbody > tr').each(function (index, ele) {
                    {
                        if ($('#SelectProductQutation', this).val() == '0' ||
                                 (parseInt($('.quantity', this).val()) || 0) == 0 ||
                                 $('.rate', this).val() == "" ||
                                 isNaN($('.rate', this).val())
                                 ) {
                            errorItemCount++;
                            $(this).addClass('error');
                        }
                        else {
                            var orderItem = {
                                ItemId: $('.product ', this).val(),
                                Quantity: parseInt($('.quantity', this).val()),
                                Rate: parseFloat($('.rate', this).val()),
                                TotalAmount: parseFloat($('.FTotal', this).val()),
                                Total: parseFloat($('.FTotal', this).val()),
                                Vat: parseFloat($('.VAT', this).val()),
                                QutationID: $('#QutationID').val(),
                                QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                                Qutation_ID: $('#Qutation_ID').val()
                            }
                            list.push(orderItem);
                        }
                    }
                });

                if (list.length == 0) {

                    $("#orderItemError").text("At least one order item required.");
                    isAllValid = false;
                }

                if (isAllValid) {
                    $(this).val("please wait...");
                    var empObj = {
                        Qutation_ID: $('#Qutation_ID').val(),
                        RefNumber: $('#RefNumber').val(),
                        QutationDate: $('#QutationDate').val(),
                        DueDate: $('#DueDate').val(),
                        SubTotal: $('#SubTotal').text(),
                        DiscountAmount: $('#DiscountAmount').val(),
                        QutationID: $('#QutationID').val(),
                        TotalVat6: $('#BTW6').text(),
                        TotalVat21: $('#BTW21').text(),
                        Total: $('#gtotal').text(),
                        TotalAmount: $('#gtotal').text(),
                        CustomerNote: $('#CustomerNote').val(),
                        ConatctId: $('#contactId').val(),
                        QutationDetailslist: list
                    };
                    $.ajax({
                        url: "/MVCQutation/AddOrEdit",
                        data: JSON.stringify(empObj),
                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            if (result.Status == "Success") {
                                list = [];
                                $('#Qutation_ID,#RefNumber,#SubTotal,#DiscountAmount,#Vat,#TotalAmount,#CustomerNote').val('');
                                $('#orderdetailsitems').empty();
                                $("#SubmitEdit").val('Save Draft');
                                swal({
                                    title: 'Invoice!',
                                    text: 'Invoice save successfully!',
                                    type: 'success'
                                },
                                 function (isconform) {
                                     window.location.href = window.location.href = "/MvcQutation/ViewQuation?quautionId=" + result.QutationId;
                                 });

                            }
                            else if (result.Status == "Fail") {
                                //alert(result.messa)
                            }


                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                        }
                    });
                }
            }
        });


        $('#orderdetailsitems').on('click', '.remove', function () {

            debugger;

            var currentRow = $(this).closest('tr');
            var vat = currentRow.find('.VAT  option:selected').val();
            var Total = currentRow.find('.FTotal').val();
            if (vat == 6) {
                var totalvat6 = parseInt(Total / 100) * 6 + (Total - Total);

                var BTW6 = $('#BTW6').text();
                $('#BTW6').text();
                $('#BTW6').text(parseFloat(BTW6 - totalvat6).toFixed(2));

            }
            if (vat == 21) {
                var currentRow = $(this).closest('tr');
                var vat21 = currentRow.find('.VAT  option:selected').val();
                var Total21 = currentRow.find('.FTotal').val();
                if (vat == 21) {
                    var totalvat21 = parseFloat(Total21 / 100) * 21 + (Total21 - Total21);

                    var BTW21 = $('#BTW21').text();
                    $('#BTW21').text();
                    $('#BTW21').text(parseFloat(BTW21 - totalvat21).toFixed(2));

                }
            }
            $(this).parents('tr').remove();
            SUMOFALLPRODUCT();
            sumofGrandModel();

            if ($('#orderdetailsitems tr').length == 0) {
                $('#SubTotal').text('0.0');
                $('#TotalBTW').text('0.0');
                $('#gtotal').text('0.0');
                $('#BTW6').text('0.0');
                $('#BTW21').text('0.0');
                $('#btwo').text('0.0');
                $('#SelectVAT').val(0);
            }
        });


        $("#Submit").click(function () {

            var valid = validateQutationAddOrEdit();
            if (valid != true) {

                return true;
            }
            else {



                var QutationIdd;
                var isAllValid = true;
                $('#orderItemError').text('');
                var list = [];
                var errorItemCount = 0;
                $('#orderdetailsitems .tbody tr').each(function (index, ele) {

                    if ($('#SelectProductQutation', this).val() == '0' ||
                                (parseInt($('.quantity', this).val()) || 0) == 0 ||
                                $('.rate', this).val() == "" ||
                                isNaN($('.rate', this).val())
                                ) {
                        errorItemCount++;
                        $(this).addClass('error');
                    }
                    else {
                        var orderItem = {
                            ItemId: $('.product ', this).val(),
                            Quantity: parseInt($('.quantity', this).val()),
                            Rate: parseFloat($('.rate', this).val()),
                            TotalAmount: parseFloat($('.FTotal', this).val()),
                            Total: parseFloat($('.FTotal', this).val()),
                            Vat: parseFloat($('.VAT', this).val()),
                            QutationID: $('#QutationID').val(),
                            QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                            Qutation_ID: $('#Qutation_ID').val()
                        }
                        list.push(orderItem);
                    }
                });

                if (list.length == 0) {

                    $("#orderItemError").text("At least one order item required.");
                    isAllValid = false;
                }

                if (isAllValid) {
                    $(this).val("please wait...");
                    var empObj = {
                        Qutation_ID: $('#Qutation_ID').val(),
                        RefNumber: $('#RefNumber').val(),
                        QutationDate: $('#QutationDate').val(),
                        DueDate: $('#DueDate').val(),
                        SubTotal: $('#SubTotal').text(),
                        DiscountAmount: $('#DiscountAmount').val(),
                        QutationID: $('#QutationID').val(),
                        TotalVat6: $('#BTW6').text(),
                        TotalVat21: $('#BTW21').text(),
                        Total: $('#gtotal').text(),
                        TotalAmount: $('#gtotal').text(),
                        CustomerNote: $('#CustomerNote').val(),
                        ConatctId: $('#contactId').val(),
                        QutationDetailslist: list
                    };
                    $.ajax({
                        url: "/MVCQutation/Save",
                        data: JSON.stringify(empObj),
                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (result) {

                            console.log(result);

                            if (result.Status == "Success") {

                                $('#Qutation_ID,#RefNumber,#SubTotal,#DiscountAmount,#Vat,#TotalAmount,#CustomerNote').val('');
                                $('#orderdetailsitems').empty();
                                $("#Submit").val('Save');
                                swal({
                                    title: 'Qutation!',
                                    text: 'Qutation save successfully!',
                                    type: 'success'
                                },
                          function (isconform) {
                              window.location.href = "/MvcQutation/ViewQuation?quautionId=" + result.QutationId;
                          });
                            }

                            else if (result.Status == "Fail") {
                                $("#Submit").val('Save');
                                swal(
                                     'Qutation!',
                                       result.message,
                                     'danger'
                                )
                            }

                        },
                        error: function (errormessage) {
                            $("#Submit").val('Save');
                            swal(
                                     'Qutation!',
                                       errormessage.responseText,
                                     'danger'
                                )
                        }
                    });
                }
            }
        });


        /// save ptint and send it to your self
        $('#saveprintandsendtoyourself').click(function () {

            var valid = validateQutationAddOrEdit();

            if (valid != true) {
                return true;
            }
            else {


                var QutationIdd;
                var isAllValid = true;
                $('#orderItemError').text('');
                var list = [];
                var errorItemCount = 0;
                $('#orderdetailsitems .tbody >tr ').each(function (index, ele) {

                    if ($('#SelectProductQutation', this).val() == '0' ||
                               (parseInt($('.quantity', this).val()) || 0) == 0 ||
                               $('.rate', this).val() == "" ||
                               isNaN($('.rate', this).val())
                               ) {
                        errorItemCount++;
                        $(this).addClass('error');
                    }
                    else {
                        {
                            var orderItem = {
                                ItemId: $('.product ', this).val(),
                                Quantity: parseInt($('.quantity', this).val()),
                                Rate: parseFloat($('.rate', this).val()),
                                TotalAmount: parseFloat($('.FTotal', this).val()),
                                Total: parseFloat($('.FTotal', this).val()),
                                Vat: parseFloat($('.VAT', this).val()),
                                QutationID: $('#QutationID').val(),
                                QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                                Qutation_ID: $('#Qutation_ID').val()
                            }
                            list.push(orderItem);
                        }
                    }
                });

                if (list.length == 0) {

                    $("#orderItemError").text("At least one order item required.");
                    isAllValid = false;
                }

                if (isAllValid) {
                    $(this).val("please wait...");
                    var empObj = {
                        Qutation_ID: $('#Qutation_ID').val(),
                        RefNumber: $('#RefNumber').val(),
                        QutationDate: $('#QutationDate').val(),
                        DueDate: $('#DueDate').val(),
                        SubTotal: $('#SubTotal').text(),
                        DiscountAmount: $('#DiscountAmount').val(),
                        QutationID: $('#QutationID').val(),
                        TotalVat6: $('#BTW6').text(),
                        TotalVat21: $('#BTW21').text(),
                        Total: $('#gtotal').text(),
                        TotalAmount: $('#gtotal').text(),
                        ConatctId: $('#contactId').val(),
                        CustomerNote: $('#CustomerNote').val(),
                        QutationDetailslist: list
                    };
                    $.ajax({
                        url: "/MVCQutation/savePrintAndSentItToYourSenf",
                        data: JSON.stringify(empObj),
                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            QutationIdd = result.QutationId;
                            localStorage.setItem('path', result.path);
                            if (result.Status == "Success") {

                                swal({
                                    title: 'Qutation!',
                                    text: 'Qutation save successfully!',
                                    type: 'success'
                                },
                                function (isconform) {
                                    window.location.href = "/MvcQutation/ViewQuation?quautionId=" + result.QutationId;
                                });
                            }
                            else if (result.Status == "Fail") {
                                alert("Fail to Process")
                            }
                        },

                        error: function (errormessage) {

                        }

                    });
                }
            }

        });

        function DownloadFile(filepath) {

            $.ajax({
                url: "/MVCQutation/DownloadFile",
                data: JSON.stringify({ FilePath: filepath }),
                type: "POST",
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                success: function (result) {

                },
                error: function (errormessage) {
                    alert(errormessage.responseText);
                }

            });
        }

        $("#saveEmail").click(function () {

            var valid = validateQutationAddOrEdit();

            if (valid != true) {
                return true;
            }
            else {
                var QutationIdd;
                var isAllValid = true;
                $('#orderItemError').text('');
                var list = [];
                var errorItemCount = 0;
                $('#orderdetailsitems .tbody tr').each(function (index, ele) {

                    if ($('#SelectProductQutation', this).val() == '0' ||
                                (parseInt($('.quantity', this).val()) || 0) == 0 ||
                                $('.rate', this).val() == "" ||
                                isNaN($('.rate', this).val())
                                ) {
                        errorItemCount++;
                        $(this).addClass('error');
                    }
                    else {
                        var orderItem = {
                            ItemId: $('.product ', this).val(),
                            Quantity: parseInt($('.quantity', this).val()),
                            Rate: parseFloat($('.rate', this).val()),
                            TotalAmount: parseFloat($('.FTotal', this).val()),
                            Total: parseFloat($('.FTotal', this).val()),
                            Vat: parseFloat($('.VAT', this).val()),
                            QutationID: $('#QutationID').val(),
                            QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                            Qutation_ID: $('#Qutation_ID').val()
                        }
                        list.push(orderItem);
                    }
                });

                if (list.length == 0) {

                    $("#orderItemError").text("At least one order item required.");
                    isAllValid = false;
                }

                if (isAllValid) {
                    $(this).val("please wait...");
                    var empObj = {
                        Qutation_ID: $('#Qutation_ID').val(),
                        RefNumber: $('#RefNumber').val(),
                        QutationDate: $('#QutationDate').val(),
                        DueDate: $('#DueDate').val(),
                        SubTotal: $('#SubTotal').text(),
                        DiscountAmount: $('#DiscountAmount').val(),
                        QutationID: $('#QutationID').val(),
                        TotalVat6: $('#BTW6').text(),
                        TotalVat21: $('#BTW21').text(),
                        Total: $('#gtotal').text(),
                        TotalAmount: $('#gtotal').text(),
                        CustomerNote: $('#CustomerNote').val(),
                        ConatctId: $('#contactId').val(),
                        QutationDetailslist: list
                    };
                    $.ajax({
                        url: "/MVCQutation/SaveEmailAdd",
                        data: JSON.stringify(empObj),
                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (result) {

                            if (result.Status == "Success") {
                                swal({
                                    title: 'Qutation!',
                                    text: 'Qutation save successfully!',
                                    type: 'success'
                                },
                                function (isconform) {
                                    window.location.href = "/MvcQutation/InvoiceByEmail?QutationId=" + result.QutationId;
                                });
                            }
                            else if (result.Status == "Fail") {
                                alert(result.Message);
                            }

                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                        }

                    });
                }
            }
        });

        $("#saveEmailedit").click(function () {

            var valid = validateQutationAddOrEdit();

            if (valid != true) {
                return true;
            }
            else {
                var isAllValid = true;
                $('#orderItemError').text('');
                var list = [];
                var errorItemCount = 0;
                $('#orderdetailsitems .tbody > tr').each(function (index, ele) {
                    {
                        if ($('#SelectProductQutation', this).val() == '0' ||
                                 (parseInt($('.quantity', this).val()) || 0) == 0 ||
                                 $('.rate', this).val() == "" ||
                                 isNaN($('.rate', this).val())
                                 ) {
                            errorItemCount++;
                            $(this).addClass('error');
                        }
                        else {
                            var orderItem = {
                                ItemId: $('.product ', this).val(),
                                Quantity: parseInt($('.quantity', this).val()),
                                Rate: parseFloat($('.rate', this).val()),
                                TotalAmount: parseFloat($('.FTotal', this).val()),
                                Total: parseFloat($('.FTotal', this).val()),
                                Vat: parseFloat($('.VAT', this).val()),
                                QutationID: $('#QutationID').val(),
                                QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                                Qutation_ID: $('#Qutation_ID').val()
                            }
                            list.push(orderItem);
                        }
                    }
                });

                if (list.length == 0) {

                    $("#orderItemError").text("At least one order item required.");
                    isAllValid = false;
                }

                if (isAllValid) {
                    $(this).val("please wait...");
                    var empObj = {
                        Qutation_ID: $('#Qutation_ID').val(),
                        RefNumber: $('#RefNumber').val(),
                        QutationDate: $('#QutationDate').val(),
                        DueDate: $('#DueDate').val(),
                        SubTotal: $('#SubTotal').text(),
                        DiscountAmount: $('#DiscountAmount').val(),
                        QutationID: $('#QutationID').val(),
                        TotalVat6: $('#BTW6').text(),
                        TotalVat21: $('#BTW21').text(),
                        Total: $('#gtotal').text(),
                        TotalAmount: $('#gtotal').text(),
                        CustomerNote: $('#CustomerNote').val(),
                        ConatctId: $('#contactId').val(),
                        QutationDetailslist: list
                    };
                    $.ajax({
                        url: "/MVCQutation/SaveEmail",
                        data: JSON.stringify(empObj),
                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            if (result.Status == "Success") {
                                swal({
                                    title: 'Invoice!',
                                    text: 'Invoice save successfully!',
                                    type: 'success'
                                },
                                     function (isconform) {
                                         window.location.href = "/MvcQutation/InvoiceByEmail?QutationId=" + result.QutationId;
                                     });


                            }
                            else if (result.Status == "Fail") {
                                alert(result.Message);

                            }
                            // $("#genratePdf").submit();
                            list = [];
                            //$('#Qutation_ID,#RefNumber,#SubTotal,#DiscountAmount,#Vat,#TotalAmount,#CustomerNote').val('');
                            //$('#orderdetailsitems').empty();
                            //$("#SubmitEdit").val('Save Draft');
                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                        }

                    });

                }
            }

        });

        $('#saveprintandsendtoyourselfsave').click(function () {

            var valid = validateQutationAddOrEdit();

            if (valid != true) {
                return true;
            }
            else {

                debugger;
                var QutationIdd;
                var isAllValid = true;
                $('#orderItemError').text('');
                var list = [];
                var errorItemCount = 0;
                $('#orderdetailsitems .tbody tr').each(function (index, ele) {

                    if ($('#SelectProductQutation', this).val() == '0' ||
                                (parseInt($('.quantity', this).val()) || 0) == 0 ||
                                $('.rate', this).val() == "" ||
                                isNaN($('.rate', this).val())
                                ) {
                        errorItemCount++;
                        $(this).addClass('error');
                    }
                    else {
                        var orderItem = {
                            ItemId: $('.product ', this).val(),
                            Quantity: parseInt($('.quantity', this).val()),
                            Rate: parseFloat($('.rate', this).val()),
                            TotalAmount: parseFloat($('.FTotal', this).val()),
                            Total: parseFloat($('.FTotal', this).val()),
                            Vat: parseFloat($('.VAT', this).val()),
                            QutationID: $('#QutationID').val(),
                            QutationDetailId: parseInt($('.QutationDetailId', this).val()),
                            Qutation_ID: $('#Qutation_ID').val()
                        }
                        list.push(orderItem);
                    }
                });

                if (list.length == 0) {

                    $("#orderItemError").text("At least one order item required.");
                    isAllValid = false;
                }

                if (isAllValid) {
                    $(this).val("please wait...");
                    var empObj = {
                        Qutation_ID: $('#Qutation_ID').val(),
                        RefNumber: $('#RefNumber').val(),
                        QutationDate: $('#QutationDate').val(),
                        DueDate: $('#DueDate').val(),
                        SubTotal: $('#SubTotal').text(),
                        DiscountAmount: $('#DiscountAmount').val(),
                        QutationID: $('#QutationID').val(),
                        TotalVat6: $('#BTW6').text(),
                        TotalVat21: $('#BTW21').text(),
                        Total: $('#gtotal').text(),
                        TotalAmount: $('#gtotal').text(),
                        CustomerNote: $('#CustomerNote').val(),
                        ConatctId: $('#contactId').val(),
                        QutationDetailslist: list
                    };
                    $.ajax({
                        url: "/MVCQutation/savePrintAndSentItToYouronsave",
                        data: JSON.stringify(empObj),
                        type: "POST",
                        contentType: "application/json;charset=utf-8",
                        dataType: "json",
                        success: function (result) {
                            QutationIdd = result.QutationId;
                            localStorage.setItem('path', result.path);
                            if (result.Status == "Success") {
                                swal({
                                    title: 'Qutation!',
                                    text: 'Qutation save successfully!',
                                    type: 'success'
                                },
                                function (isconform) {
                                    window.location.href = "/MvcQutation/ViewQuation?quautionId=" + result.QutationId;
                                });
                            }
                            else if (result.Status == "Fail") {

                            }
                        },

                        error: function (errormessage) {

                        }

                    });
                }
            }

        });

        function LoadProduct() {

            if ($('#mainrow #SelectProductQutation').has('option').length > 0) {
                return;
            }
            else {
                $("#mainrow #SelectProductQutation").find("option").remove();
                $("#mainrow #SelectProductQutation").prepend("<option value=0>" + 'Select Item' + "</option>");
                $("#mainrow #SelectProductQutation").append("<option value=AddNewProductSelect>" + 'Add New Product' + "</option>");

                $.ajax({
                    url: "/MVCProduct/GetProduct",
                    type: "Get",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    data: { ProductStatus: "Good" },
                    success: function (data) {

                        $.each(data, function (key, item) {

                            $('#mainrow #SelectProductQutation').append($('<option></option>').val(item.ProductId).html(item.ProductName));

                        });

                    },
                    Error: function (errormessage) {
                        alert(errormessage);
                    }

                });
            }
        }


        function LoadProductAdding() {
            $("#SelectProductQutation").find("option").remove();
            $("#SelectProductQutation").prepend("<option value=0>" + 'Select Item' + "</option>");
            $("#SelectProductQutation").append("<option value=AddNewProductSelect>" + 'Add New Product' + "</option>");

            $.ajax({
                url: "/MVCProduct/GetProduct",
                type: "Get",
                async: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                data: { ProductStatus: "Good" },
                success: function (data) {

                    $.each(data, function (key, item) {

                        $('#SelectProductQutation').append($('<option></option>').val(item.ProductId).html(item.ProductName));

                    });

                },
                Error: function (errormessage) {
                    alert(errormessage);
                }

            });
        }

        $('#Rate').keyup(function () {
            currentRow1 = $(this).closest("tr");
            var currentRow = $(this).closest("tr");
            var quantity = currentRow.find("td:eq(1)").find('input').val(); // get current row 1st TD value
            var Price = $(this).val();
            var total = quantity * Price;
            currentRow.find('td:eq(3)').find('input').val(total);
            var sum = 0;
            var vatValue = currentRow1.find('#SelectVAT option:selected').val();
            if (vatValue == 0) {
                $('#btwo').text('0.00');
            }

            if (vatValue == 6) {
                var sum6 = 0;
                var total6 = 0;
                $('#orderdetailsitems tr').each(function () {
                    r = $(this).closest('tr');
                    var value = r.find('.VAT  option:selected').val();
                    if (r.find('.VAT  option:selected').val() == 6) {
                        total6 = r.find('td:eq(3)').find('input').val();
                        if (!isNaN(total6) && total6.length != 0) {
                            sum6 += parseFloat(total6);
                        }
                        var totalvat6 = parseFloat(sum6 / 100 * 6 + sum6 - sum6);
                        $('#BTW6').text(totalvat6.toFixed(2));
                    }
                })


            }

            if (vatValue == 21) {
                var sum21 = 0;
                var total21 = 0;
                $('#orderdetailsitems tr').each(function () {
                    r = $(this).closest('tr');
                    var value = r.find('.VAT  option:selected').val();
                    if (r.find('.VAT  option:selected').val() == 21) {
                        total21 = r.find('td:eq(3)').find('input').val();
                        if (!isNaN(total21) && total21.length != 0) {
                            sum21 += parseFloat(total21);
                        }
                        var totalvat21 = parseFloat(sum21 / 100 * 21 + sum21 - sum21);
                        $('#BTW21').text(totalvat21.toFixed(2));
                    }

                })
            }


            SUMOFALLPRODUCT();
            sumofGrandModel();
        })

        function SUMOFALLPRODUCT() {
            var sum = 0;
            $('#orderdetailsitems tr').each(function () {
                var row = $(this).closest('tr');
                var total = row.find('td:eq(3)').find('.FTotal ').val();
                if (!isNaN(total) && total.length != 0) {
                    sum += parseFloat(total);
                }
                $('#TotalBTW').text(sum.toFixed(2));
                $('#SubTotal').text(sum.toFixed(2));

            })
        }

        function sumofGrandModel() {

            var btw6 = 0, btw21, totalbtw = 0, grandtotal = 0;
            btw6 = parseFloat($('#BTW6').text());
            btw21 = parseFloat($('#BTW21').text());
            totalbtw = parseFloat($('#TotalBTW').text());
            btw6 = isNaN(btw6) ? 0 : btw6;
            btw21 = isNaN(btw21) ? 0 : btw21;
            totalbtw = isNaN(totalbtw) ? 0 : totalbtw;
            grandtotal = parseFloat(btw6) + parseFloat(btw21) + parseFloat(totalbtw);
            var t = parseFloat(grandtotal);
            $('#gtotal').text(t.toFixed(2));
            //
            //if (!isNaN(grandtotal) && grandtotal.length != 0) {
        }

        $(document).on('keyup', '#orderdetailsitems .rate', function () {

            var currentRow1 = $(this).closest("tr");
            var currentRow = $(this).closest("tr");
            var quantity = currentRow.find("td:eq(1)").find('input').val(); // get current row 1st TD value
            var Price = $(this).val();
            var total = quantity * Price;
            currentRow.find('td:eq(3)').find('input').val(total);
            var sum = 0;
            var vatValue = currentRow1.find('.VAT  option:selected').val();
            if (vatValue == 0) {
                $('#btwo').text('0.00');
            }
            if (vatValue == 6) {
                var sum6 = 0;
                var total6 = 0;
                $('#orderdetailsitems tr').each(function () {

                    r = $(this).closest('tr');
                    var value = r.find('.VAT  option:selected').val();
                    if (r.find('.VAT  option:selected').val() == 6) {
                        total6 = r.find('td:eq(3)').find('input').val();
                        if (!isNaN(total6) && total6.length != 0) {
                            sum6 += parseInt(total6);
                        }
                        var totalvat6 = parseFloat(sum6 / 100 * 6 + sum6 - sum6);

                        $('#BTW6').text(totalvat6.toFixed(2));
                    }
                })
            }


            if (vatValue == 21) {
                var sum21 = 0;
                var total21 = 0;
                $('#orderdetailsitems tr').each(function () {

                    r = $(this).closest('tr');
                    var value = r.find('.VAT  option:selected').val();
                    if (r.find('.VAT  option:selected').val() == 21) {
                        total21 = r.find('td:eq(3)').find('input').val();
                        if (!isNaN(total21) && total21.length != 0) {
                            sum21 += parseInt(total21);
                        }
                        var totalvat21 = parseFloat(sum21 / 100 * 21 + sum21 - sum21);
                        $('#BTW21').text(totalvat21.toFixed(2));
                    }
                })
            }


            SUMOFALLPRODUCT();
            sumofGrandModel();
            calculatevat();
        });

        var vatValue = 0;
        $(document).on('keyup', '#orderdetailsitems .quantity ', function () {

            var currentRow1 = $(this).closest("tr");
            var currentRow = $(this).closest("tr");
            var Price = currentRow.find("td:eq(2)").find('input').val(); // get current row 1st TD value
            var quantity = $(this).val();
            var total = quantity * Price;
            currentRow.find('td:eq(3)').find('input').val(total);
            var sum = 0;
            var vatValue = currentRow1.find('.VAT  option:selected').val();
            if (vatValue == 0) {
                $('#btwo').text('0.00');
            }
            if (vatValue == 6) {
                var sum6 = 0;
                var total6 = 0;
                $('#orderdetailsitems tr').each(function () {

                    r = $(this).closest('tr');
                    var value = r.find('.VAT  option:selected').val();
                    if (r.find('.VAT  option:selected').val() == 6) {
                        total6 = r.find('td:eq(3)').find('input').val();
                        if (!isNaN(total6) && total6.length != 0) {
                            sum6 += parseInt(total6);
                        }
                        var totalvat6 = parseFloat(sum6 / 100 * 6 + sum6 - sum6);

                        $('#BTW6').text(totalvat6.toFixed(2));
                    }
                })
            }


            if (vatValue == 21) {
                var sum21 = 0;
                var total21 = 0;
                $('#orderdetailsitems tr').each(function () {

                    r = $(this).closest('tr');
                    var value = r.find('.VAT  option:selected').val();
                    if (r.find('.VAT  option:selected').val() == 21) {
                        total21 = r.find('td:eq(3)').find('input').val();
                        if (!isNaN(total21) && total21.length != 0) {
                            sum21 += parseInt(total21);
                        }
                        var totalvat21 = parseFloat(sum21 / 100 * 21 + sum21 - sum21);
                        $('#BTW21').text(totalvat21.toFixed(2));
                    }
                })
            }


            SUMOFALLPRODUCT();
            sumofGrandModel();
            calculatevat();
        });


        function calculatevat() {
            if ($('#orderdetailsitems tr').length == 0) {
                $('#btwo').text('0.00');
                $('#BTW6').text('0.00');
                $('#BTW21').text('0.00');
            }
            else {

                var sum0 = 0;
                var total0 = 0;
                $('#orderdetailsitems tr').each(function () {
                    $('#BTW0').text();

                    r = $(this).closest('tr');
                    var value = r.find('.VAT  option:selected').val();
                    if (r.find('.VAT  option:selected').val() == 0) {
                        total0 = r.find('td:eq(3)').find('input').val();
                        if (!isNaN(total0) && total0.length != 0) {
                            sum0 += parseInt(total0);
                        }
                        var totalvat0 = parseFloat(sum0 / 100 * 6 + sum0 - sum0);
                        var totalr = Math.round(totalvat0, 2);
                        $('#BTW0').text(totalvat0.toFixed(2));
                    }
                    else {
                        $('#BTW0').text('0.00');
                    }
                })
            }

            var sum6 = 0;
            var total6 = 0;
            $('#orderdetailsitems tr').each(function () {
                var r = $(this).closest('tr');
                var value = r.find('.VAT  option:selected').val();
                if (r.find('.VAT  option:selected').val() == 6) {
                    total6 = r.find('td:eq(3)').find('input').val();
                    if (!isNaN(total6) && total6.length != 0) {
                        sum6 += parseInt(total6);
                    }
                    var totalvat6 = parseFloat(sum6 / 100 * 6 + sum6 - sum6);
                    var totalr = Math.round(totalvat6, 2);
                    $('#BTW6').text(totalvat6.toFixed(2));
                }
            })

            var sum21 = 0;
            var total21 = 0;
            $('#orderdetailsitems tr').each(function () {
                //$('#BTW21').text();
                var r = $(this).closest('tr');
                var value = r.find('.VAT  option:selected').val();
                if (r.find('.VAT  option:selected').val() == 21) {

                    total21 = r.find('td:eq(3)').find('input').val();
                    if (!isNaN(total21) && total21.length != 0) {
                        sum21 += parseInt(total21);
                    }
                    var totalvat21 = parseFloat(sum21 / 100 * 21 + sum21 - sum21);

                    $('#BTW21').text(totalvat21.toFixed(2));
                }

            })
            RowCounte();
        }
        function RowCounte() {

            var rowCount6 = 0;
            var rowCount21 = 0;
            var rowCount0 = 0;

            $('#orderdetailsitems tr td').each(function () {


                var EquationResult = $(this).find('.VAT').val();

                if (EquationResult == 6) {
                    rowCount6++;

                }
                else if (EquationResult == 21) {
                    rowCount21++;
                }
                else if (EquationResult == 0) {
                    rowCount0++
                }
            })

            if (rowCount0 == 0) {
                $("#btwo").text('0.00');
            }
            if (rowCount6 == 0) {
                $("#BTW6").text('0.00');
            }
            if (rowCount21 == 0) {
                $("#BTW21").text('0.00');
            }

            if ($('#orderdetailsitems tr').length == 0) {

                $('#SubTotal').text();
                $('#TotalBTW').text();
                $('#gtotal').text();
            }
        }

        $('#Quantity').keyup(function () {
            var currentRow = $(this).closest("tr");
            var quantity = $(this).val();  // get current row 1st TD value
            var Price = currentRow.find("td:eq(2)").find('input').val();
            var total = quantity * Price;
            currentRow.find('td:eq(3)').find('input').val(total);
        })

        $('#CompanySitting').click(function () {
            window.location.href = "/MVCComapny/Index";
        });

        $('#AccountSitting').click(function () {

            $.ajax({
                url: "/UserInfo/GetUserByCompayId",
                type: 'Post',
                success: function (Userdata) {
                    $.toast({
                        heading: 'Success',
                        text: 'Data loaded successfuly `Loaded`',
                        icon: 'info',
                        loader: true,        // Change it to false to disable loader
                        loaderBg: '#9EC600'  // To change the background
                    });

                    $('#userid').val(Userdata.UserId);
                    $('#txtFname').val(Userdata.UserFname);
                    $('#txtInsertion').val(Userdata.Insertion);
                    $('#txtLname').val(Userdata.UserLname);
                    $('#txtEmail').val(Userdata.Username);
                    $('#TxtDob').val(Userdata.DOB);
                    var gen = Userdata.Gender;
                    if (gen == 1) {
                        $('input:radio[name="gender"]').filter('[value="1"]').attr('checked', true);
                    }
                    else {
                        $('input:radio[name="gender"]').filter('[value="2"]').attr('checked', true);
                    }

                    $('#UserInfoModel').modal('show');
                }
            });

        });

        $('#SaveuserInfo').click(function () {

            Userdata = {
                UserFname: $('#txtFname').val(),
                Insertion: $('#txtInsertion').val(),
                UserLname: $('#txtLname').val(),
                Gender: $("input[name='gender']:checked").val(),
                DOB: $('#TxtDob').val(),
                UserId: $('#userid').val()
            },

            $.ajax({
                url: "/UserInfo/UpdateUserInfo",
                type: 'Post',
                data: Userdata,
                success: function (response) {
                    if (response == "Ok") {
                        $.toast({
                            heading: 'Success',
                            text: 'Information updated successfuly `Updated`',
                            icon: 'info',
                            loader: true,        // Change it to false to disable loader
                            loaderBg: '#9EC600'  // To change the background
                        });
                        $('#UserInfoModel').modal('hide');
                    }
                },
                error: function (error) {
                    alert('somthing going wrong');
                },
            });
        });

        function Edit(companyId) {

            window.location.href = "Company/AddOrEdit/" + companyId;
        }

        $(document).ready(function () {


           


            $(document).ready(function () {
                LoadProductUnit();
            });

            function LoadProductUnit() {

                $("#ProductUnitSelectQutation").find("option").remove();

                $("#ProductUnitSelectQutation").prepend("<option value=0>" + 'Select Unit' + "</option>");
                $("#ProductUnitSelectQutation").append("<option value=AddNewPUnitSelect>" + 'Add New Unit' + "</option>");

                $.ajax({
                    url: "/MVCProductUnit/GetProductUnit",
                    type: "Get",
                    async: false,
                    contentType: "application/json;charset=utf-8",
                    dataType: "json",
                    success: function (data) {

                        $.each(data, function (key, item) {
                            $('#ProductUnitSelectQutation').append($('<option></option>').val(item.ProductUnitID).html(item.ProductUnit));
                        });

                    },
                    Error: function (errormessage) {
                        alert(errormessage);
                    }

                });
            }

            $('#ProductUnitSelectQutation').change(function () {

                var value = $(this).val();
                if (value == "AddNewPUnitSelect") {

                    $('#CreateNewProductModal').modal('hide');
                    $('#UnitModel').modal('show');
                }

            });

            

           

            $('#CreateNewContacts').click(function () {
                $('#UpdateContacts').hide();
                $('#SaveNewContacts').show();
                $('#CreateNewContactModal').modal('show');
            });

        });


        function validateQutationAddOrEdit() {
            var isValid = true;

            if ($('#Qutation_ID').val().trim() == "") {
                $('#Qutation_ID').css('border-color', 'Red');

                isValid = false;
            }
            else {
                $('#Qutation_ID').css('border-color', 'lightgrey');
            }
            if ($('#DueDate').val().trim() == "") {
                $('#DueDate').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#DueDate').css('border-color', 'lightgrey');
            }
            if ($('#RefNumber').val().trim() == "") {
                $('#RefNumber').css('border-color', 'Red');
                $('#RefNumber').focus();
                isValid = false;
            }
            else {
                $('#RefNumber').css('border-color', 'lightgrey');
            }
            if ($('#QutationDate').val() == "") {
                $('#QutationDate').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#QutationDate').css('border-color', 'lightgrey');
            }

            if ($('#QutationDate1').val() == "") {
                $('#QutationDate1').css('border-color', 'Red');
                isValid = false;
            }
            else {
                $('#QutationDate1').css('border-color', 'lightgrey');
            }
            return isValid;
        }

        function DeleteProduct(ProductId) {

            swal({
                title: "Are you sure?",
                text: "You will not be able to recover this data with Id! " + ProductId,
                type: "warning",
                showCancelButton: true,
                confirmButtonColor: '#DD6B55',
                confirmButtonText: 'Yes, I am sure!',
                cancelButtonText: "No, cancel it!",
                closeOnConfirm: false,
                closeOnCancel: false
            },
            function (isConfirm) {

                if (isConfirm) {

                    $.ajax({
                        url: "/MVCProduct/Delete/" + ProductId,
                        typr: "GET",
                        dataType: "json",
                        success: function (resultData) {
                            swal("Restricted!", "Product deleted Restricted Util now!", "success");
                        },
                        error: function (errormessage) {
                            alert(errormessage.responseText);
                        }
                    });

                }
                else {
                    swal(" Deleted Cancelled", "Your data is safe :)", "error");
                }
            });

        }

        function SuccessInsert() {
            swal({
                title: "Congratulations!!!!",
                text: "Your data has been saved successfully",
                type: "success",
            });
        }

        function SuccessUpdate() {
            swal({
                title: "Congratulations!!!!",
                text: "Your data has been updated successfully",
                type: "success",

            });
        }

        function EditQuatation(id) {

            $.ajax({
                url: '/MVCClient/AddOrEditQutation',
                type: 'GET',
                data: {
                    Qutationid: id
                },
                success: function (data) {

                    window.location.href = "/MVCQutation/AddOrEdit/" + id;
                }
            });

        }

        // var $loading = $('.preloader').hide();

        //$(document)
        //  .ajaxStart(function () {
        //      $loading.show();
        //  })
        //  .ajaxStop(function () {
        //      $loading.hide();
        //  });

        $(document).ready(function () {
            var patth = localStorage.getItem('path');
            $("#FilePath").val(patth);

            if ($('input#FilePath').val() == "") {

            }
            else {
                $('#DownloadFile1').submit();
                $("#FilePath").val('');
                localStorage.removeItem('path');
            }
        })

        function Edit(companyId) {
            window.location.href = "Company/AddOrEdit/" + companyId;
        }


        $('#mainrow .pClass').change(function () {
            var Current = $(this).closest('tr');

            var value = $(this).val();
            if (value == "AddNewProductSelect") {
                LoadProductUnit();
                $('#CreateNewProductModal').modal('show');
            }
            else if (value == "0") {

                return;
            }
            else {

                var productId = $(this).val();

                $.ajax({
                    url: "/MVCQutation/ProductPricebyId",
                    type: "POST",

                    cache: false,
                    data: { 'ProductId': productId },
                    success: function (resultData) {
                        ChangeTotalOnItemCahe(Current);
                        $('#mainrow #Rate').val(resultData);





                    },
                    error: function (errormessage) {
                        //alert(errormessage)
                    }
                });
            }
        })



        function ChangeTotalOnItemCahe(currentRow) {
            debugger;
            var quantity = currentRow.find("td:eq(1)").find('input').val();  // get current row 1st TD value
            var Price = currentRow.find("td:eq(2)").find('input').val();
            var total = quantity * Price;
            currentRow.find('td:eq(3)').find('input').val(total);

        }





        function GetProductPriceById(ProductId) {


        }

        function CleartProdctTextBox() {
            $('#ProductName').val("");
            $('#Description').val("");
            $('#SalePrice').val("");
            $('#PurchasePrice').val("");
            $('#OpeningQuantity').val("");
            $('#ProductUnitSelect').val("0");

        }


        /// numver validatio for input

        $(".quantity ").on("keypress keyup blur", function (event) {
            //this.value = this.value.replace(/[^0-9\.]/g,'');
            $(this).val($(this).val().replace(/[^0-9]/g, ''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });

        $("#Rate").on("keypress keyup blur", function (event) {
            //this.value = this.value.replace(/[^0-9\.]/g,'');
            $(this).val($(this).val().replace(/[^0-9\.]/g, ''));
            if ((event.which != 46 || $(this).val().indexOf('.') != -1) && (event.which < 48 || event.which > 57)) {
                event.preventDefault();
            }
        });
    });


</script>
