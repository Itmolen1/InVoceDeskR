
@{
    ViewBag.Title = "EditQuatation";
}


@model InvoiceDiskLast.Models.MVCQutationViewModel
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var Contectdatas = ViewBag.Contentdata;
    var CompanyDatas = ViewBag.Companydata;
    var QutationModel = ViewBag.QutationDat;
}

<div class="row">
    <div class="col-2 b-r">
        @*two*@
    </div>
    <div class="col-8 b-r" style="border:1px solid Silver">
        <div class="container">



            <div class="row" style="margin-top:10px">
                <div class="col-7 b-r">
                    @Html.HiddenFor(model => model.QutationID, new { htmlAttributes = new { id = "qutationId1" } })

                    @Html.HiddenFor(model => model.ConatctId, new { htmlAttributes = new { id = "ConatctId" } })

                    @Html.HiddenFor(model => model.CompanyId, new { htmlAttributes = new { id = "CompanyId" } })

                    <img src="@Url.Content("~/Images/" + @CompanyDatas.CompanyLogo)" class="image-Size" id="targetImg" style="border:none" />

                    <div class="row clientInfo">
                        <div class="col-12 b-r HeadText">Qutation</div>
                    </div>
                    <div class="row clientInfo" style="margin-top:10px">
                        <div class="col-12 b-r">@Contectdatas.ContactName</div>
                    </div>
                    <div class="row">
                        <div class="col-12 b-r">
                            @Contectdatas.ContactAddress,@Contectdatas.StreetNumber
                            <br />
                            @Contectdatas.PostalCode,@Contectdatas.City
                        </div>
                    </div>


                    <div class="row" style="margin-top:20px">
                        <div class="col-3 b-r">
                            Qutation Date:
                        </div>
                        <div class="col-6 b-r">

                            <input  class="QutationDate  form-control Input-height"  id = "QutationDate" autocomplete = "off"  value="@Model.QutationDate" />

                            @*@Html.EditorFor(model => model.QutationDate, new { htmlAttributes = new { @type = "text", @style = "font-size:12px", @class = "QutationDate  form-control Input-height", id = "QutationDate", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.QutationDate, "", new { @class = "text-danger" })*@

                        </div>
                        <div class="col-3 b-r"></div>
                    </div>
                    <div class="row">
                        <div class="col-3 b-r">
                            Qutation Number:
                        </div>
                        <div class="col-6 b-r">
                            @Html.EditorFor(model => model.Qutation_ID, new { htmlAttributes = new { @class = "form-control Input-height", id = "Qutation_ID" } })
                            @Html.ValidationMessageFor(model => model.Qutation_ID, "", new { @class = "text-danger" })


                        </div>
                        <div class="col-3 b-r"></div>
                    </div>
                    <div class="row">
                        <div class="col-3 b-r">
                            Due Date:
                        </div>
                        <div class="col-6 b-r">
                            <input class="DueDate form-control Input-height" id="DueDate" autocomplete="off"  value="@Model.DueDate"/>

                            @*@Html.EditorFor(model => model.DueDate, new { htmlAttributes = new { @type = "text", @style = "font-size:12px", @class = "DueDate form-control Input-height", id = "DueDate", title = "Due Date", @autocomplete = "off" } })
                            @Html.ValidationMessageFor(model => model.DueDate, "", new { @class = "text-danger" })*@

                        </div>
                        <div class="col-3 b-r"></div>
                    </div>
                    <div class="row">
                        <div class="col-3 b-r">
                            Reference No:
                        </div>
                        <div class="col-6 b-r">
                            @Html.EditorFor(Model => Model.RefNumber, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control Input-height", id = "RefNumber" } })
                            @Html.ValidationMessageFor(model => model.RefNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-3 b-r"></div>
                    </div>
                </div>

                <div class="col-5 b-r">
                    <div class="row" style="margin-top:33px">
                        <div class="col-3 b-r"></div>
                        <div class="col-7 b-r CmpColor">@CompanyDatas.CompanyName</div>
                        <div class="col-2 b-r"></div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">Kvk nr:</div>
                        <div class="col-7 b-r">@CompanyDatas.KVK</div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">BTW nr:</div>
                        <div class="col-7 b-r">@CompanyDatas.BTW</div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">Bank:</div>
                        <div class="col-7 b-r">@CompanyDatas.BankName</div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">IBAN No:</div>
                        <div class="col-7 b-r">@CompanyDatas.IBANNumber</div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">BIC No:</div>
                        <div class="col-7 b-r">@CompanyDatas.BIC</div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">Telephone:</div>
                        <div class="col-7 b-r">@CompanyDatas.CompanyPhone</div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">Cell No:</div>
                        <div class="col-7 b-r">@CompanyDatas.CompanyCell</div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">E-mail:</div>
                        <div class="col-7 b-r">@CompanyDatas.CompanyEmail</div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">Website:</div>
                        <div class="col-7 b-r">@CompanyDatas.Website</div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">Address:</div>
                        <div class="col-7 b-r">
                            @CompanyDatas.CompanyAddress<br />
                            @CompanyDatas.PostalCode,@CompanyDatas.CompanyCity <br />
                            @CompanyDatas.CompanyCountry
                        </div>
                    </div>
                </div>
            </div>

            <hr />
            <div class="row">
                <div class="col-12 b-r">
                    <table class="table" id="orderdetailsitems1">
                        <thead class="thead-dark">
                            <tr>
                                <th>
                                    Goods
                                </th>
                                <th>
                                    Quantity
                                </th>
                                <th>
                                    Price
                                </th>
                                <th>
                                    Total
                                </th>
                                <th>
                                    Vat%
                                </th>
                                <th>
                                    Sub
                                </th>
                                <th>
                                    Action
                                </th>

                            </tr>
                        </thead>

                        <tbody class="tbodyGood">

                            @{
                                if (ViewBag.QutationDatailsList != null)
                                {



                                    foreach (var item in ViewBag.QutationDatailsList)
                                    {


                                        if (item.Type == "Goods")
                                        {
                                            <tr>
                                                <td>
                                                    <select class="product form-control pClassG Input-height" style="width: 300px;font-size:12px">
                                                        <option value="AddNewProductSelect">Select Item..</option>
                                                        @foreach (var product in ViewBag.Good)
                                                        {
                                                            <option value="@product.ProductId" @(product.ProductId == item.ItemId ? "selected='selected'" : "")>@product.ProductName</option>
                                                        }
                                                    </select>
                                                </td>
                                                <td>
                                                    <input type="text" class="quantityG form-control Input-height" style="font-size:12px" value="@item.Quantity" autocomplete="off" />
                                                </td>
                                                <td>
                                                    <input type="text" class="rateG form-control Input-height" style="font-size:12px" value="@item.Rate" autocomplete="off" />
                                                </td>

                                                <td>
                                                    <input type="text" class="FTotalG form-control Input-height" style="font-size:12px" value="@item.Total" readonly="readonly" autocomplete="off" />
                                                </td>
                                                <td>
                                                    <select name="NewsCategoriesID" class="VATG form-control Input-height" style="width:60px;font-size:12px">
                                                        @foreach (var item1 in ViewBag.VatDrop)
                                                        {
                                                            <option value="@item1.Vat1" @(item1.Vat1 == item.Vat ? "selected='selected'" : "")>@item1.Name</option>
                                                        }
                                                    </select>

                                                </td>

                                                <td>
                                                    <input type="text" readonly class="RowTotalG  form-control Input-height" style="width:80px" value="@item.RowSubTotal" />
                                                </td>

                                                <td>
                                                    <input type="button" id="btnRemoveGood" value="x" class="btn-height-Remove" style="width:50px" />
                                                </td>

                                                <td>
                                                    <input type="hidden" class="QutationDetailId" value="@item.QutationDetailId" />
                                                </td>

                                                <td>
                                                    <input type="hidden" class="QutationID" value="@item.QutationID" />
                                                </td>

                                            </tr>
                                        }
                                    }


                                    <tr id="mainrow">
                                        <td>
                                            <select id="SelectProductQutationG" class="product form-control pClassG Input-height" style="width: 300px;font-size:12px"></select>
                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @style = "font-size:12px", @type = "text", @class = "quantityG form-control Input-height", id = "QuantityG", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @style = "font-size:12px", @class = "rateG form-control Input-height", id = "RateG", @autocomplete = "off" } })
                                            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                                        </td>
                                        <td>
                                            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @style = "font-size:12px", @class = "FTotalG form-control Input-height", id = "FTotalG", @readonly = "readonly" } })
                                            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                                        </td>
                                        <td>
                                            <select id="SelectVATG" class="VATG form-control Input-height" style="width:60px;font-size:12px">
                                                <option>0</option>
                                                <option>6</option>
                                                <option>21</option>
                                            </select>
                                        </td>
                                        <td>
                                            <input type="text" readonly id="RowTotalG" class="RowTotalG  form-control Input-height" style="width:80px" />
                                        </td>
                                        <td>

                                            <input type="button" id="btnaddGoods" value="+" class="btn-height" style="width:50px" />
                                        </td>



                                    </tr>


                                }



                            }



                        </tbody>
                    </table>
                </div>
            </div>
            <p></p>
            <div class="row">
                <div class="col-12 b-r">
                    <table class="table" id="QutationServiceDetail">
                        <thead class="thead-dark">
                            <tr>
                                <th>Date</th>

                                <th>
                                    Services
                                </th>
                                <th>Decription</th>
                                <th>
                                    hour
                                </th>
                                <th>
                                    Hourly rate
                                </th>
                                <th>
                                    Total
                                </th>
                                <th>
                                    Vat %
                                </th>
                                <th>
                                    Sub
                                </th>
                                <th>
                                    Action
                                </th>

                            </tr>

                        </thead>

                        <tbody class="tbodyService">

                            @{
                                if (ViewBag.QutationDatailsList != null)
                                {



                                    foreach (var item in ViewBag.QutationDatailsList)
                                    {


                                        if (item.Type == "Service")
                                        {
                                            <tr>

                                                @{
                                                    DateTime dt = new DateTime();

                                                    dt = Convert.ToDateTime(item.ServiceDate);

                                                }

                                                <td>

                                                    <input class="ServiceDate  ss Input-height form-control" value="@dt.ToShortDateString()" autocomplete="off" />
                                                </td>

                                                <td>
                                                    <select class="product form-control pClassG Input-height" style="width: 200px;font-size:12px">
                                                        <option value="AddNewServiceSelect">Select Item..</option>
                                                        @foreach (var product in ViewBag.Service)
                                                        {
                                                            <option value="@product.ProductId" @(product.ProductId == item.ItemId ? "selected='selected'" : "")>@product.ProductName</option>
                                                        }
                                                    </select>
                                                </td>
                                                <td>
                                                    <input type="text" class=" Discription form-control Input-height" value="@item.Description" autocomplete="off" />
                                                </td>

                                                <td>
                                                    <input type="text" class="quantityG form-control Input-height" style="font-size:12px" value="@item.Quantity" autocomplete="off" />
                                                </td>

                                                <td>
                                                    <input type="text" class="rateG form-control Input-height" style="font-size:12px" value="@item.Rate" autocomplete="off" />
                                                </td>

                                                <td>
                                                    <input type="text" class="FTotalG form-control Input-height" style="font-size:12px" value="@item.Total" readonly="readonly" autocomplete="off" />

                                                </td>

                                                <td>
                                                    <select name="NewsCategoriesID" class="VATG form-control Input-height" style="width:60px;font-size:12px">

                                                        @foreach (var item1 in ViewBag.VatDrop)
                                                        {
                                                            <option value="@item1.Vat1" @(item1.Vat1 == item.Vat ? "selected='selected'" : "")>@item1.Name</option>
                                                        }
                                                    </select>

                                                </td>

                                                <td>

                                                    <input type="text" readonly class="RowTotalG  form-control Input-height" style="width:80px" value="@item.RowSubTotal" autocomplete="off" />
                                                </td>

                                                <td>
                                                    <input type="button" id="btnRemoveService" value="x" class="btn-height-Remove" style="width:50px" autocomplete="off" />
                                                </td>

                                                <td>
                                                    <input type="hidden" class="QutationDetailId" value="@item.QutationDetailId" />
                                                </td>
                                                <td>
                                                    <input type="hidden" class="QutationID" value="@item.QutationID" />
                                                </td>
                                            </tr>
                                                        }


                                                    }
                                                    <tr id="mainrow1">
                                                        <td>
                                                            @*@Html.EditorFor(model => model.DueDate1, new { htmlAttributes = new { @class = "ServiceDate   form-control MAterialDatepicker Input-height", id = "QutationDate", @value = DateTime.Now.ToShortDateString() } })*@


                                                            <input class="ServiceDate Input-height form-control" autocomplete="off" />

                                                        </td>

                                                        <td>
                                                            <select id="SelectProductQutationS" class="product form-control pClassG Input-height" style="width: 200px;font-size:12px"></select>
                                                        </td>
                                                        <td>
                                                            <input type="text" class=" Discription form-control Input-height" autocomplete="off" />
                                                        </td>
                                                        <td>
                                                            @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @style = "font-size:12px", @type = "text", @class = "quantityG form-control Input-height", id = "QuantityS", @autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                                        </td>
                                                        <td>
                                                            @Html.EditorFor(model => model.Rate, new { htmlAttributes = new { @style = "font-size:12px", @class = "rateG form-control Input-height", id = "RateS", @autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.Rate, "", new { @class = "text-danger" })
                                                        </td>
                                                        <td>
                                                            @Html.EditorFor(model => model.Total, new { htmlAttributes = new { @style = "font-size:12px", @class = "FTotalG form-control Input-height", id = "FTotal", @readonly = "readonly", @autocomplete = "off" } })
                                                            @Html.ValidationMessageFor(model => model.Total, "", new { @class = "text-danger" })
                                                        </td>
                                                        <td>
                                                            <select id="SelectVATS" class="VATG form-control Input-height" style="width:60px;font-size:12px">
                                                                <option>0</option>
                                                                <option>6</option>
                                                                <option>21</option>
                                                            </select>
                                                        </td>
                                                        <td>
                                                            <input type="text" readonly class="RowTotalG form-control Input-height" id="dddd" style="width:80px" />

                                                        </td>
                                                        <td>
                                                            <input type="button" id="btnSerVice" value="+" class="btn-height" style="width:50px" />
                                                        </td>

                                                    </tr>
                                                    }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <div class="row">
                <div class="col-6 b-r">
                    <table class="table table-hover" id="participantTable">
                        <tbody id="upload123">
                            @if (ViewBag.FILE != null)
                            {
                                foreach (var item in ViewBag.FILE)
                                {
                                    <tr>
                                        <td>
                                            <a href="@item.FileFolderPathe/@item.DirectoryPath" target="_blank"><span class="badge badge-success"><i class="icon-minus-sign"></i> @item.DirectoryPath</span></a>
                                        </td>

                                        <td>
                                            <input type="hidden" value="@item.DirectoryPath" class="FileName" />
                                        </td>


                                        <td>
                                            <button class="btn btn-danger btn-sm'  type='button" id="DeleteFile"><i class="fa fa-trash"></i></button>
                                        </td>
                                    </tr>
                                }
                            }

                        </tbody>
                    </table>
                </div>
                <div class="col-6 b-r"></div>
            </div>
            <div class="row">
                <div class="col-6 b-r">
                    <form name='frmAccount' id='frmAccount'>
                        <input type="file" name="file23" id="txtUploadFile12" class="makethispretty btn btn-success" style="width:500px" />
                    </form>
                </div>
                <div class="col-6 b-r"></div>
            </div>

            <hr />
            <div class="row">
                <div class="col-8 b-r">
                    <div class="row">
                        <div class="col-3 b-r">Customer Notes:</div>
                        <div class="col-9 b-r">
                            @Html.TextAreaFor(model => model.CustomerNote, new { htmlAttributes = new { @style = "font-size:12px", @class = "form-control", id = "CustomerNote" } })
                            @Html.ValidationMessageFor(model => model.CustomerNote, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                <div class="col-4 b-r">
                    <div class="row">
                        <div class="col-5 b-r text-right">Sub Total:</div>
                        <div class="col-7 b-r text-right">
                            <label id="SubTotal">@QutationModel.SubTotal</label>
                        </div>

                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">Totaal excel btw:</div>
                        <div class="col-7 b-r text-right">
                            <label id="TotalBTW">@QutationModel.SubTotal</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">BTW0%:</div>
                        <div class="col-7 b-r text-right">
                            <label id="btwo">0.00</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">BTW 6%:</div>
                        <div class="col-7 b-r text-right">
                            <label id="BTW6">@QutationModel.TotalVat6</label>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-5 b-r text-right">BTW 21%:</div>
                        <div class="col-7 b-r text-right">
                            <label id="BTW21">@QutationModel.TotalVat21</label>
                        </div>
                    </div>

                    <div class="row Grand-color">
                        <div class="col-5 b-r text-right">Grand Total:</div>
                        <div class="col-7 b-r text-right">
                            <span style="margin-top:1px"><b>&euro;</b></span><label id="gtotal">@QutationModel.TotalAmount</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="col-2 b-r">
        @*two*@
    </div>
</div>

@*<label></label>*@

<div class="row" style="margin-top:5px">
    <div class="col-2 b-r"></div>
    <div class="col-8 b-r">
        <div class="pull-right">
            <div class="btn-group">
                <button id="Submit" type="button" class="btn btn-success"><span><i class="fa fa-save fa-backgroun" style="margin-right:5px"></i></span>Save Draft</button>
            </div>
            <button id="saveEmail" type="button" value="Save + email" class="btn btn-success" style="margin:0px 5px"><span><i class="fa fa-envelope fa-backgroun" style="margin-right:5px"></i></span>Save + E-mail</button>
            <button id="saveprintandsendtoyourselfsave" type="button" class="btn btn-success" style="margin:0px 5px"><span><i class="fa fa-save fa-backgroun" style="margin-right:5px"></i></span>Save + print and send and send ot yourself</button>
        </div>
    </div>
    <div class="col-2 b-r"></div>
    </div>

    @Html.Partial("~/Views/Shared/PartialViews/UnitPartialView.cshtml")

    @Html.Partial("~/Views/Shared/PartialViews/ProductPartialView.cshtml")



    <script type="text/javascript">
        var Currentrow, Total, vat, Price, Quantity = 0;
        $(document).ready(function () {
            LoadProductS();
            LoadProductG();
        });

        var VAT21VAlUE, VAT6VAlUE;
        $('#btnaddGoods').click(function () {

            var currentRow1 = $(this).closest("tr");
            var VAT = currentRow1.find('.VATG').val();
            RowSubTalSubtotal(VAT, currentRow1);
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();

            var isAllValid = true;
            if ($("#mainrow #SelectProductQutationG").val() == "0") {
                isAllValid = false;
                alert("Please select Item");
                return;
            }
            var isAllValid = true;
            if ($("#mainrow .quantityG").val() == 0) {
                isAllValid = false;

                alert("Please provide quantityG");
                return;
            }
            var isAllValid = true;
            if ($("#mainrow .rateG").val() == 0) {
                isAllValid = false;
                alert("Please select provide rate");
                return;
            }




            if (isAllValid) {
                var $newRow = $("#mainrow").clone().removeAttr('id');
                $('#SelectProductQutationG', $newRow).val($("#SelectProductQutationG").val());
                $('.VATG', $newRow).val($("#mainrow #SelectVATG").val());
                //Replace add button with remove button
                $("#btnaddGoods", $newRow).addClass('remove').val('x').removeClass('btn-success').addClass('btn-height-Remove');
                //Remove id attribute from new clone row
                $("#SelectProductQutationG,#QuantityG,#RateG,#FTotalG,#SelectVATG", $newRow).removeAttr('id');
                $('span.error', $newRow).remove();

                $('.tbodyGood').prepend($newRow);

                $(".FTotalG").prop('disabled', true);
                $('#mainrow #SelectProductQutationG').val('0');
                $('#mainrow .quantityG').val('');
                $('#mainrow #RateG').val('');
                $('#mainrow .FTotalG').val('');
                $('#mainrow .quantityG').val('');
                $('#mainrow .RowTotalG').val('');

                if ($('#orderItemError').text != '') {
                    $('#orderItemError').text('');
                }
                $('#mainrow #SelectVATG').val(0);
            }
        });

        $('#btnSerVice').click(function () {

            var currentRow1 = $(this).closest("tr");
            vat = currentRow1.find('.VATG').val();
            RowSubTalSubtotal(vat, currentRow1);
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();

            var isAllValid = true;
            if ($("#mainrow1 #SelectProductQutationS").val() == "0") {
                isAllValid = false;
                alert("Please select Item");
                return;
            }

            var isAllValid = true;
            if ($("#mainrow1 .quantityS").val() == 0) {
                isAllValid = false;

                alert("Please provide quantity");
                return;
            }
            var isAllValid = true;
            if ($("#mainrow1 .rateS").val() == 0) {
                isAllValid = false;
                alert("Please select provide rate");
                return;
            }


            var currentRow1 = $(this).closest("tr");
            var vat = currentRow1.find('.VATG').val();
            RowSubTalSubtotal(vat, currentRow1);
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();




            if (isAllValid) {
                var $newRow = $("#mainrow1").clone().removeAttr('id');
                $('#SelectProductQutationS', $newRow).val($("#SelectProductQutationS").val());
                $('.VATG', $newRow).val($("#mainrow1 #SelectVATS").val());

                //Replace add button with remove button
                $("#btnSerVice", $newRow).addClass('remove').val('x').removeClass('btn-success').addClass('btn-height-Remove');

                //Remove id attribute from new clone row

                $("#SelectProductQutationS,#QuantityS,#RateS,#FTotalS,#SelectVATS", $newRow).removeAttr('id');

                $('span.error', $newRow).remove();

                $('.tbodyService').prepend($newRow);

                $(".FTotalG").prop('disabled', true);

                $('#mainrow1 #SelectProductQutationS').val('0');
                $('#mainrow1 .quantityG').val('');
                $('#mainrow1 .rateG ').val('');

                $('#mainrow1 #FTotalG').val('');
                $('#mainrow1 .quantityG').val('');
                $('#mainrow1 #FTotal').val('');
                if ($('#orderItemError').text != '') {
                    $('#orderItemError').text('');
                }
                $('#mainrow1 #SelectVATS').val(0);
                $('#mainrow1 #RowTotalG').val('');
                $('#mainrow1 .RowTotalG').val('');
                $('#QutationServiceDetail1 #mainrow1 .RowTotalG ').val('');
            }


        });

        function LoadProductG() {
            PgoodServices = "Good";

            $("#mainrow #SelectProductQutationG").find("option").remove();
            $("#mainrow #SelectProductQutationG").prepend("<option value=0>" + 'Select Item' + "</option>");
            $("#mainrow #SelectProductQutationG").append("<option value=AddNewProductSelect>" + 'Add New Product' + "</option>");

            $.ajax({
                url: "/MVCProduct/GetProduct",
                type: "Get",
                async: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                data: { ProductStatus: PgoodServices },
                success: function (data) {
                    $.each(data, function (key, item) {
                        $('#mainrow #SelectProductQutationG').append($('<option></option>').val(item.ProductId).html(item.ProductName));
                    });
                },
                Error: function (errormessage) {
                    alert(errormessage);
                }

            });
        }

        function LoadProductS() {
            PgoodServices = "Services";

            $("#mainrow1 #SelectProductQutationS").find("option").remove();
            $("#mainrow1 #SelectProductQutationS").prepend("<option value=0>" + 'Select Item' + "</option>");
            $("#mainrow1 #SelectProductQutationS").append("<option value=AddNewServiceSelect>" + 'Add New Product' + "</option>");

            $.ajax({
                url: "/MVCProduct/GetProduct",
                type: "Get",
                async: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                data: { ProductStatus: PgoodServices },
                success: function (data) {
                    $.each(data, function (key, item) {

                        $('#mainrow1 #SelectProductQutationS').append($('<option></option>').val(item.ProductId).html(item.ProductName));
                    });
                },
                Error: function (errormessage) {
                    alert(errormessage);
                }
            });
        }

        $('.quantityG').keyup(function () {
            Currentrow = $(this).closest("tr");
            calculateTotalGoods(Currentrow);
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        $('.rateG').keyup(function () {
            Currentrow = $(this).closest("tr");
            calculateTotalGoods(Currentrow);

            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        var FocuseInTotal, FocusOutTotal, FoucuseInSubTotal, FocusOutSubTotal;

        $(document).on("keypress", "tbody .rateG", function () {

            Currentrow = $(this).closest("tr");
            FoucuseInSubTotal = Currentrow.find(".FTotalG").val();
            FocuseInTotal = Currentrow.find('.RowTotalG').val();
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();

        });

        $(document).on("keyup", "tbody .rateG", function () {

            Currentrow = $(this).closest("tr");
            vat = Currentrow.find(".VATG").val();
            calculateTotalGoods(Currentrow);
            RowSubTalSubtotal(vat, Currentrow);
            var Total = Currentrow.find(".FTotalG").val();
            var Subtotalwt = Currentrow.find('.RowTotalG').val();
            // GrandTotal("Add", Total, Subtotalwt);
        });

        $(document).on("keyup", "tbody .quantityG", function () {
            Currentrow = $(this).closest("tr");
            vat = Currentrow.find(".VATG").val();
            calculateTotalGoods(Currentrow);
            RowSubTalSubtotal(vat, Currentrow);
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        $(document).on("keyup", "tbody .rateG", function () {

            Currentrow = $(this).closest("tr");
            vat = Currentrow.find(".VATG").val();
            calculateTotalGoods(Currentrow);
            RowSubTalSubtotal(vat, Currentrow);

            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        $(document).on("keyup", "tbody .quantityG", function () {
            Currentrow = $(this).closest("tr");
            vat = Currentrow.find(".VATG").val();
            calculateTotalGoods(Currentrow);
            RowSubTalSubtotal(vat, Currentrow);

            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        function calculateTotalGoods(currentRow) {

            console.log(currentRow);
            Quantity = currentRow.find(".quantityG").val(),
            Price = currentRow.find('.rateG').val();
            Total = parseFloat(Quantity * Price);
            if (!isNaN(Total)) {
                currentRow.find('.FTotalG').val(Total);
            }

        }

        function RowSubTalSubtotal(vat, CurrentRow) {

            debugger;
            var price = CurrentRow;
            Total = 0;
            Total = CurrentRow.find('.FTotalG').val();
            if (parseInt(vat) == 0 && typeof (vat) != "undefined") {
                if (!isNaN(Total) && typeof (Total) != "undefined") {
                    CurrentRow.find('.RowTotalG').val(Total);
                    CurrentRow.find('.RowTotalG').val(parseFloat(Total).toFixed(2));
                    return;
                }
            }

            if (!isNaN(Total) && typeof (Total) != "undefined") {
                var InputVatValue = parseFloat((Total / 100) * vat);
                var ValueWTV = parseFloat(InputVatValue) + parseFloat(Total);
                CurrentRow.find('.RowTotalG').val(parseFloat(ValueWTV).toFixed(2));
            }
        }

        $(document).on('change', 'tbody .VATG', function () {

            var currentRow1 = $(this).closest("tr");
            var VAT = currentRow1.find('.VATG').val();
            RowSubTalSubtotal(VAT, currentRow1);
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();

        });

        $('.VATG').change(function () {

            debugger;

            var Currentrow = $(this).closest("tr");
            vat = Currentrow.find('.VATG').val();
            RowSubTalSubtotal(vat, Currentrow);
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
            Currentrow = "";
        });

        $('.quantityG').keyup(function () {
            debugger;
            var Currentrow = $(this).closest("tr");
            vat = Currentrow.find('.VATG').val();
            RowSubTalSubtotal(vat, Currentrow);
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        $('.quantityG').keyup(function () {
            debugger;
            var Currentrow = $(this).closest("tr");
            vat = Currentrow.find('.VATG').val();
            RowSubTalSubtotal(vat, Currentrow);
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        $('.rateG').keyup(function () {
            var Currentrow = $(this).closest("tr");
            vat = Currentrow.find('.VATG').val();
            RowSubTalSubtotal(vat, Currentrow);
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        $('tbody .VATG').change(function () {

            debugger;


            var Currentrow = $(this).closest("tr");
            vat = Currentrow.find('.VATG').val();
            RowSubTalSubtotal(vat, Currentrow);

            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        $('.VATG').change(function () {

            var currentRow1 = $(this).closest("tr");
            vat = currentRow1.find('.VATG').val();
            RowSubTalSubtotal(vat, Currentrow);

            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();


        });        //Services

        function CalculateVateTotal() {

            var Totalvat211, Totalvat6 = 0;
            var t = 0;
            $('#QutationServiceDetail tr').each(function () {
                var Value = 0;
                Value = $(this).find(".VATG").val();
                var FTotalG = $(this).find(".FTotalG").val();

                if (Value == 21) {

                    if (!isNaN(parseFloat(Value))) {
                        var InputVatValue = parseFloat((FTotalG / 100) * 21);
                        t += parseFloat(InputVatValue)
                    }
                }

                if (Value == 6) {
                    if (!isNaN(parseFloat(Value))) {
                        var InputVatValue = parseFloat((FTotalG / 100) * 6);

                        Totalvat6 += parseFloat(InputVatValue);
                    }
                }
            });


            $('#orderdetailsitems1 tr').each(function () {

                var Value = $(this).find(".VATG").val();
                var FTotalG = $(this).find(".FTotalG").val();

                if (Value == 6) {

                    if (!isNaN(parseFloat(Value))) {
                        var InputVatValue = parseFloat((FTotalG / 100) * 6);
                        Totalvat6 += parseFloat(InputVatValue);
                    }
                }

                if (Value == 21) {

                    if (!isNaN(parseFloat(Value))) {
                        var InputVatValue = parseFloat((FTotalG / 100) * 21);
                        t += parseFloat(InputVatValue);
                    }
                }
            });


            if (!isNaN(Totalvat6)) {
                $('#BTW6').text(Totalvat6.toFixed(2));
            }
            if (!isNaN(t)) {
                $('#BTW21').text(parseFloat(t).toFixed(2));
            }
        }

        $(document).ready(function () {
            $('.pClassG').change(function () {
                debugger;
                var currentRow1 = $(this).closest('tr');
                var value = currentRow1.find('.pClassG').val();
                GetProductPriceByProductId(value, currentRow1);
            });
        })

        $('#mainrow .pClassG').change(function () {

            debugger;


            var currentRow = $(this).closest('tr');
            var value = currentRow.find('.pClassG').val();
            GetProductPriceByProductId(value, currentRow);
        });

        $('#mainrow1 .pClassG').change(function () {

            debugger;
            var currentRow = $(this).closest('tr');
            var value = currentRow.find('.pClassG').val();
            GetProductPriceByProductId(value, currentRow);
        });

        function GetProductPriceByProductId(Id, CurrentRow) {

            if (Id == "AddNewProductSelect") {
                GoodsService = "";
                GoodsService = "Good";
                ShowServiceGood("Good");
                $('#TypeGoodsServices').attr('disabled', false);
                $('#UpdateProIdGoods').hide();
                $('#SAveProdIDGoods').show();
                $('#TypeGoodsServices').val('Good');
                $('#TypeGoodsServices').attr('disabled', 'disabled');
                $('#CreateNewProductModalGoods').modal('show');
            }
            if (Id == "AddNewServiceSelect") {
                GoodsService = "";
                GoodsService = "Services";
                ShowServiceGood("Services");
                $('#TypeGoodsServices').attr('disabled', false);
                $('#UpdateProIdGoods').hide();
                $('#SAveProdIDGoods').show();
                $('#TypeGoodsServices').val('Services');
                $('#TypeGoodsServices').attr('disabled', 'disabled');
                $('#CreateNewProductModalGoods').modal('show');
            }
            else if (Id == "0") {

                return;
            }
            else {
                var productId = Id;
                $.ajax({
                    url: "/MVCQutation/ProductPricebyId",
                    type: "POST",
                    cache: false,
                    data: { 'ProductId': productId },
                    success: function (resultData) {

                        CurrentRow.find('.rateG').val(resultData);
                        calculateTotalGoods(CurrentRow);
                        CombineTotalAndSubtotal();
                        CombineTotal();
                        CalculateVateTotal();
                        vat = CurrentRow.find('.VATG').val();
                        var it = CurrentRow.find('.RowTotalG').val();
                        RowSubTalSubtotal(vat, CurrentRow);

                    },
                    error: function (errormessage) {

                    }
                });
            }
        }

        function CombineTotalAndSubtotal() {

            debugger;

            var SubTotalGoode = 0, SubTotalService = 0;

            SubTotalGoode = AddSubtotalGoods();
            SubTotalService = AddSubTotalService();

            if (isNaN(SubTotalGoode)) {
                SubTotalGoode = 0;
            }

            if (isNaN(SubTotalService)) {
                SubTotalService = 0;
            }
            var Total = parseFloat(SubTotalGoode) + parseFloat(SubTotalService);

            // $('#SubTotal').text(Total.toFixed(2));
            $('#gtotal').text(Total.toFixed(2));



        }

        function CombineTotal() {

            var TotalGoode, Total, TotalService1 = 0;

            TotalGoode = totalGoods();
            TotalService1 = TotalService();

            if (isNaN(TotalGoode)) {
                TotalGoode = 0;
            }

            if (isNaN(TotalService1)) {
                TotalService1 = 0;
            }

            Total = parseFloat(TotalGoode) + parseFloat(TotalService1);
            $('#SubTotal').text(Total.toFixed(2));
            $('#TotalBTW').text(Total.toFixed(2));
        }

        function AddSubtotalGoods() {
            var SubTotalGood = 0;

            $('#orderdetailsitems1 tbody tr').each(function () {

                var Value = $(this).find(".RowTotalG").val();

                if (!isNaN(parseFloat(Value) && typeof (Value) != "undefined")) {
                    SubTotalGood += parseFloat(Value)
                }
            })
            return SubTotalGood;
        }

        function AddSubTotalService() {
            var SubTotalService = 0;
            $('#QutationServiceDetail tr').each(function () {
                var Value = $(this).find('.RowTotalG').val();
                if (!isNaN(parseFloat(Value) && typeof (Value) != "undefined")) {
                    SubTotalService += parseFloat(Value);
                }
            })
            return SubTotalService;
        }

        function totalGoods() {
            var TotalGood = 0;

            $('#orderdetailsitems1 tbody tr').each(function () {
                var Value = $(this).find(".FTotalG").val();
                if (!isNaN(parseFloat(Value) && typeof (Value) != "undefined")) {
                    TotalGood += parseFloat(Value)
                }
            })
            return TotalGood;
        }

        function TotalService() {
            var TotalService = 0;
            $('#QutationServiceDetail tbody tr').each(function () {
                var Value = $(this).find(".FTotalG").val();
                if (!isNaN(parseFloat(Value) && typeof (Value) != "undefined")) {
                    TotalService += parseFloat(Value);
                }
            })
            return TotalService;
        }

        function AsignValueT21(NewValue, Vat, InOrOut) {

            debugger;

            if (InOrOut == 'AddingVat') {
                if (Vat == 21) {
                    var Currnt21Value = $('#BTW21').text();

                    if ((Currnt21Value) != "") {
                        var v = parseFloat(Currnt21Value) + parseFloat(NewValue);
                        $('#BTW21').text(parseFloat(v).toFixed(2));
                    }
                    else {
                        $('#BTW21').text(NewValue);
                    }
                }
                else if (Vat == 6) {
                    var Currnt21Value = $('#BTW6').text();
                    if ((Currnt21Value) != '') {
                        var v = parseFloat(Currnt21Value) + parseFloat(NewValue);
                        $('#BTW6').text(parseFloat(v).toFixed(2));
                    }
                    else {
                        $('#BTW6').text(NewValue);
                    }
                }
            }
            else if (InOrOut == "Removing") {
                if (Vat == 21) {
                    var Currnt21Value = $('#BTW21').text();

                    if ((Currnt21Value) != "") {
                        var v = parseFloat(Currnt21Value) - parseFloat(NewValue);
                        $('#BTW21').text(parseFloat(v).toFixed(2));
                    }
                    else {
                        $('#BTW21').text(NewValue);
                    }
                }
                else if (Vat == 6) {
                    var Currnt21Value = $('#BTW6').text();
                    if ((Currnt21Value) != "") {
                        var v = parseFloat(Currnt21Value) - parseFloat(NewValue);
                        $('#BTW6').text(parseFloat(v).toFixed(2));
                    }
                    else {
                        $('#BTW6').text(NewValue);
                    }
                }
            }
        }

        $('#orderdetailsitems1').on('click', '.remove', function () {

            var currentRow = $(this).closest('tr');
            var vat = currentRow.find('.VAT  option:selected').val();
            $(this).parents('tr').remove();
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        $('#QutationServiceDetail').on('click', '.remove', function () {
            var currentRow = $(this).closest('tr');
            var vat = currentRow.find('.VAT  option:selected').val();
            $(this).parents('tr').remove();
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        $('#saveprintandsendtoyourselfsave').click(function () {

            $(this).val("please wait...");

            var list = [], orderItem, CurrentRow;
            var formData = new FormData($('#frmAccount')[0]);

            var files = $("#uploadfile")[0];
            if (!validateFileSize()) {
                return true;
            }

            $('#orderdetailsitems1 .tbodyGood tr').each(function () {
                CurrentRow = $(this).closest("tr");
                if (ValidateRow(CurrentRow)) {
                    orderItem = {
                        ItemId: parseInt($(this).find('.product').val()),
                        Quantity: parseInt($(this).find('.quantityG').val()),
                        Type: "Goods",
                        Rate: parseInt($(this).find('.rateG').val()),
                        Total: parseFloat($(this).find('.FTotalG').val()),
                        Vat: parseFloat($(this).find('.VATG').val()),
                        RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                        QutationDetailId: $(this).find('.QutationDetailId').val(),
                        Qutation_ID: $(this).find('.Qutation_ID').val()
                    }
                    list.push(orderItem);
                }
            });

            $('#QutationServiceDetail .tbodyService tr').each(function () {

                CurrentRow = $(this).closest("tr");
                if (ValidateRow(CurrentRow)) {
                    orderItem = {
                        ItemId: $(this).find('.product').val(),
                        Quantity: parseInt($(this).find('.quantityG').val()),
                        Rate: parseFloat($(this).find('.rateG').val()),
                        Total: parseFloat($(this).find('.FTotalG').val()),
                        Description: $(this).find('.Discription').val(),
                        Type: "Service",
                        ServiceDate: $(this).find('.ServiceDate').val(),
                        Vat: parseFloat($(this).find('.VATG').val()),
                        RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                        QutationDetailId: $(this).find('.QutationDetailId').val(),
                        Qutation_ID: $(this).find('#Qutation_ID').val()
                    }
                    list.push(orderItem);
                }
            });

            if (list.length == 0) {
                $('#BTW6').text('');
                $('#BTW21').text('');
                $('#gtotal').text('');
                $('#gtotal').text('');
            }


            var empObj = {
                Qutation_ID: $('#Qutation_ID').val(),
                RefNumber: $('#RefNumber').val(),
                QutationDate: $('#QutationDate').val(),
                DueDate: $('#DueDate').val(),
                SubTotal: $('#SubTotal').text(),
                DiscountAmount: $('#DiscountAmount').val(),
                QutationID: $('#QutationID').val(),
                TotalVat6: $('#BTW6').text(),
                TotalVat21: $('#BTW21').text(),
                Total: $('#SubTotal').text(),
                TotalAmount: $('#gtotal').text(),
                CustomerNote: $('#CustomerNote').val(),
                ConatctId: $('#ConatctId').val(),
                CompanyId: $('#CompanyId').val(),
            };




            for (var key in empObj) {
                formData.append(key, empObj[key]);
            }
            for (var i = 0; i < list.length; i++) {
                formData.append('QutationDetailslist1[' + i + '][ItemId]', list[i].ItemId)
                formData.append('QutationDetailslist1[' + i + '][Quantity]', list[i].Quantity)
                formData.append('QutationDetailslist1[' + i + '][Rate]', list[i].Rate)
                formData.append('QutationDetailslist1[' + i + '][Total]', list[i].Total)
                formData.append('QutationDetailslist1[' + i + '][Vat]', list[i].Vat)
                formData.append('QutationDetailslist1[' + i + '][RowSubTotal]', list[i].RowSubTotal)
                formData.append('QutationDetailslist1[' + i + '][Type]', list[i].Type)
                formData.append('QutationDetailslist1[' + i + '][QutationDetailId]', list[i].QutationDetailId)
                formData.append('QutationDetailslist1[' + i + '][Qutation_ID]', list[i].Qutation_ID)
                formData.append('QutationDetailslist1[' + i + '][ServiceDate]', list[i].ServiceDate)

            }


            $.ajax({
                url: "/Qutation/SaveEmailPrintEdit",
                type: "POST",
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (result) {

                    $("#saveprintandsendtoyourselfsave").val('Save + print and send and send ot yourself');

                    QutationIdd = result.QutationId;
                    if (result.Status == "Success") {
                        QutationIdd = result.QutationId;
                        localStorage.setItem('path', result.path);
                        swal({
                            title: 'Qutation!',
                            text: 'Qutation save successfully!',
                            type: 'success'
                        },
                        function (isconform) {
                            window.location.href = "/Qutation/ViewQuation?quautionId=" + result.QutationId;
                        });
                    }
                    else if (result.Status == "Fail") {

                    }
                },

                error: function (errormessage) {

                }

            });

        });

        $('#saveEmail').click(function () {

            $(this).val("please wait...");

            var list = [], orderItem, CurrentRow;
            var formData = new FormData($('#frmAccount')[0]);
            var files = $("#uploadfile")[0];
            if (!validateFileSize()) {
                return true;
            }

            $('#orderdetailsitems1 .tbodyGood tr').each(function () {

                debugger;
                CurrentRow = $(this).closest("tr");
                if (ValidateRow(CurrentRow)) {
                    orderItem = {
                        ItemId: parseInt($(this).find('.product').val()),
                        Quantity: parseInt($(this).find('.quantityG').val()),
                        Type: "Goods",
                        Rate: parseInt($(this).find('.rateG').val()),
                        Total: parseFloat($(this).find('.FTotalG').val()),
                        Vat: parseFloat($(this).find('.VATG').val()),
                        RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                        QutationDetailId: $(this).find('.QutationDetailId').val(),
                        Qutation_ID: $(this).find('.Qutation_ID').val()
                    }
                    list.push(orderItem);
                }
            });

            $('#QutationServiceDetail .tbodyService tr').each(function () {


                CurrentRow = $(this).closest("tr");
                if (ValidateRow(CurrentRow)) {
                    orderItem = {
                        ItemId: $(this).find('.product').val(),
                        Quantity: parseInt($(this).find('.quantityG').val()),
                        Rate: parseFloat($(this).find('.rateG').val()),
                        Total: parseFloat($(this).find('.FTotalG').val()),
                        Description: $(this).find('.Discription').val(),
                        Type: "Service",
                        ServiceDate: $(this).find('.ServiceDate').val(),
                        Vat: parseFloat($(this).find('.VATG').val()),
                        RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                        QutationDetailId: $(this).find('.QutationDetailId').val(),
                        Qutation_ID: $(this).find('#Qutation_ID').val()
                    }
                    list.push(orderItem);
                }
            });


            if (list.length == 0) {
                $('#BTW6').text('');
                $('#BTW21').text('');
                $('#gtotal').text('');
                $('#gtotal').text('');
            }


            var empObj = {
                Qutation_ID: $('#Qutation_ID').val(),
                RefNumber: $('#RefNumber').val(),
                QutationDate: $('#QutationDate').val(),
                DueDate: $('#DueDate').val(),
                SubTotal: $('#SubTotal').text(),
                DiscountAmount: $('#DiscountAmount').val(),
                QutationID: $('#QutationID').val(),
                TotalVat6: $('#BTW6').text(),
                TotalVat21: $('#BTW21').text(),
                Total: $('#SubTotal').text(),
                TotalAmount: $('#gtotal').text(),
                CustomerNote: $('#CustomerNote').val(),

                ConatctId: $('#ConatctId').val(),
                CompanyId: $('#CompanyId').val(),
            };


            for (var key in empObj) {
                formData.append(key, empObj[key]);
            }
            for (var i = 0; i < list.length; i++) {
                formData.append('QutationDetailslist1[' + i + '][ItemId]', list[i].ItemId)
                formData.append('QutationDetailslist1[' + i + '][Quantity]', list[i].Quantity)
                formData.append('QutationDetailslist1[' + i + '][Rate]', list[i].Rate)
                formData.append('QutationDetailslist1[' + i + '][Total]', list[i].Total)
                formData.append('QutationDetailslist1[' + i + '][Vat]', list[i].Vat)
                formData.append('QutationDetailslist1[' + i + '][RowSubTotal]', list[i].RowSubTotal)
                formData.append('QutationDetailslist1[' + i + '][Type]', list[i].Type)
                formData.append('QutationDetailslist1[' + i + '][QutationDetailId]', list[i].QutationDetailId)
                formData.append('QutationDetailslist1[' + i + '][Qutation_ID]', list[i].Qutation_ID)
                formData.append('QutationDetailslist1[' + i + '][ServiceDate]', list[i].ServiceDate)
            }


            $.ajax({
                url: "/Qutation/SaveEmailEdit",
                type: "POST",
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (result) {
                    $("#saveEmail").val('Save + Email');

                    QutationIdd = result.QutationId;

                    if (result.Status == "Success") {



                        swal({
                            title: 'Invoice!',
                            text: 'Invoice save successfully!',
                            type: 'success'
                        },
                              function (isconform) {
                                  window.location.href = "/Qutation/InvoiceByEmail?QutationId=" + result.QutationId;
                              });
                    }
                    else if (result.Status == "Fail") {
                        alert(result.Message);
                    }
                },
                error: function (errormessage) {

                }
            });
        });

        $('#Submit').click(function () {


            $(this).val("please wait...");
            var list = [], orderItem, CurrentRow;
            var formData = new FormData($('#frmAccount')[0]);
            var files = $("#uploadfile")[0];
            if (!validateFileSize()) {
                $("#Submit").val('Save Draft');
                return true;
            }


            $('#orderdetailsitems1 .tbodyGood tr').each(function () {
                debugger;

                CurrentRow = $(this).closest("tr");
                if (ValidateRow(CurrentRow)) {
                    orderItem = {
                        ItemId: parseInt($(this).find('.product').val()),
                        Quantity: parseInt($(this).find('.quantityG').val()),
                        Type: "Goods",
                        Rate: parseInt($(this).find('.rateG').val()),
                        Total: parseFloat($(this).find('.FTotalG').val()),
                        Vat: parseFloat($(this).find('.VATG').val()),
                        RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                        QutationDetailId: $(this).find('.QutationDetailId').val(),
                        Qutation_ID: $(this).find('.Qutation_ID').val()
                    }
                    list.push(orderItem);
                }
            });

            $('#QutationServiceDetail .tbodyService tr').each(function () {
                debugger;

                CurrentRow = $(this).closest("tr");
                if (ValidateRow(CurrentRow)) {
                    orderItem = {
                        ItemId: $(this).find('.product').val(),
                        Quantity: parseInt($(this).find('.quantityG').val()),
                        Rate: parseFloat($(this).find('.rateG').val()),
                        Total: parseFloat($(this).find('.FTotalG').val()),
                        Description: $(this).find('.Discription').val(),
                        Type: "Service",
                        ServiceDate: $(this).find('.ServiceDate').val(),
                        Vat: parseFloat($(this).find('.VATG').val()),
                        RowSubTotal: parseFloat($(this).find('.RowTotalG').val()),
                        QutationDetailId: $(this).find('.QutationDetailId').val(),
                        Qutation_ID: $(this).find('#Qutation_ID').val()
                    }
                    list.push(orderItem);
                }
            });



            if (list.length == 0) {
                $('#BTW6').text('');
                $('#BTW21').text('');
                $('#gtotal').text('');
                $('#gtotal').text('');
            }

            var empObj = {
                Qutation_ID: $('#Qutation_ID').val(),
                RefNumber: $('#RefNumber').val(),
                QutationDate: $('#QutationDate').val(),
                DueDate: $('#DueDate').val(),
                SubTotal: $('#SubTotal').text(),
                DiscountAmount: $('#DiscountAmount').val(),
                QutationID: $('#QutationID').val(),
                TotalVat6: $('#BTW6').text(),
                TotalVat21: $('#BTW21').text(),
                Total: $('#SubTotal').text(),
                TotalAmount: $('#gtotal').text(),
                CustomerNote: $('#CustomerNote').val(),
                ConatctId: $('#ConatctId').val(),
                CompanyId: $('#CompanyId').val(),

            };

            for (var key in empObj) {
                formData.append(key, empObj[key]);
            }
            for (var i = 0; i < list.length; i++) {
                formData.append('QutationDetailslist1[' + i + '][ItemId]', list[i].ItemId)
                formData.append('QutationDetailslist1[' + i + '][Quantity]', list[i].Quantity)
                formData.append('QutationDetailslist1[' + i + '][Rate]', list[i].Rate)
                formData.append('QutationDetailslist1[' + i + '][Total]', list[i].Total)
                formData.append('QutationDetailslist1[' + i + '][Vat]', list[i].Vat)
                formData.append('QutationDetailslist1[' + i + '][RowSubTotal]', list[i].RowSubTotal)
                formData.append('QutationDetailslist1[' + i + '][Type]', list[i].Type)
                formData.append('QutationDetailslist1[' + i + '][QutationDetailId]', list[i].QutationDetailId)
                formData.append('QutationDetailslist1[' + i + '][Qutation_ID]', list[i].Qutation_ID)
                formData.append('QutationDetailslist1[' + i + '][ServiceDate]', list[i].ServiceDate)
            }

            $.ajax({
                url: "/Qutation/EditQutation",
                data: JSON.stringify(empObj),
                type: "POST",
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (result) {

                    $("#Submit").val('Save Draft');
                    QutationIdd = result.QutationId;
                    if (result.Status == "Success") {
                        swal({
                            title: 'Invoice!',
                            text: 'Invoice save successfully!',
                            type: 'success'
                        },
                             function (isconform) {
                                 window.location.href = "/Qutation/ViewQuation?quautionId=" + result.QutationId;
                             });


                    }
                    else if (result.Status == "Fail") {
                        alert(result.Message);

                    }
                },

                error: function (errormessage) {

                }

            });

        });
        var QID = 0;

        $(document).on('click', '#btnRemoveGood', function () {

            var currentRow1 = $(this).closest('tr');
            var row = $(this).closest('tr');
            Remove(row);
            $(this).closest("tr").remove();
            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();


        });

        $(document).on('click', '#btnRemoveService', function () {

            debugger;
            var currentRow1 = $(this).closest('tr');
            var row = $(this).closest('tr');
            Remove(row);
            $(this).closest("tr").remove();

            CombineTotalAndSubtotal();
            CombineTotal();
            CalculateVateTotal();
        });

        function Remove(CurrentRow) {

            var QIDId = CurrentRow.find('.QutationDetailId').val();
            var total1 = CurrentRow.find('.FTotalG').val();
            var vat = CurrentRow.find('.VATG').val();
            QID = CurrentRow.find('.QutationID').val();

            var data = JSON.stringify({
                QutationId: QID,
                QutationDetailID: QIDId,
                vat: vat,
                total: total1
            })
            $.ajax({
                url: "/Qutation/DeleteQuatation",
                type: "POST",
                async: false,
                contentType: "application/json;charset=utf-8",
                dataType: "json",
                data: data,
                success: function (data) {
                    if (data.Status == "Success") {


                        swal({
                            title: 'Qutation!',
                            text: 'Qutation delete successfully!',
                            type: 'success'
                        });

                    }
                    else if (data.Status == "Fail") {

                        swal({
                            title: 'Qutation!',
                            text: 'fail to delete qutation!',
                            type: 'danger'
                        });

                    }
                },
                Error: function (errormessage) {
                    alert(errormessage);
                }

            });

        }

        function ValidateRow(CurrentRow) {

            var Isvalid = true;
            var Produectid = 0, quantityG = 0, varrateG = 0;
            Produectid = CurrentRow.find('.product').val();
            quantityG = CurrentRow.find('.quantityG ').val();
            varrateG = CurrentRow.find('.rateG ').val();
            if (parseInt(Produectid) == 0 || Produectid == "") {
                Isvalid = false;
            }
            if (parseInt(quantityG) == 0 || quantityG == "") {
                Isvalid = false;
            }
            if (parseInt(varrateG) == 0 || varrateG == "") {
                Isvalid = false;
            }
            return Isvalid;
        }

    </script>

    <script type="text/javascript">
        $('#txtUploadFile12').on('change', function (e) {
            var fileUpload = $("#txtUploadFile12").get(0);
            var files = fileUpload.files;
            var formData = new FormData($('#frmAccount')[0]);
            var IsvalidSixze = validateFileSize();

            if (IsvalidSixze == false) {
                return true;
            }
            else {




                for (var i = 0; i < files.length; i++) {
                    formData.append(files[i].name, files[i]);
                }



                formData.append("QutationID", parseInt($('#QutationID').val()));

                $.ajax({
                    url: '/Qutation/UploadFiles',
                    type: "POST",
                    contentType: false,
                    processData: false,
                    data: formData,
                    async: false,
                    success: function (result) {

                        if (result != "") {
                            $('#upload123').append("<tr><td><input type='text'  class='form-control FileName' value='" + result.FileName + "' name='FileName' readonly></td><td><button class='btn btn-danger col-sm btn-sm remove' type='button'><i class='fa fa-trash'></i></button></td><td><input type='hidden' class='form-control filepath' value='" + result.FilePath + "' name='FilePath'></td></tr>")
                            var fileUpload = $("#txtUploadFile12").val('');
                        }
                    },
                    error: function (err) {
                        alert(err.statusText);
                    }
                });
            }
        });

        function validateFileSize() {
            var Isvalid = true;
            if (window.File && window.FileReader && window.FileList && window.Blob) {

                if (document.getElementById("txtUploadFile12").files.length != 0) {
                    //get the file size and file type from file input field
                    var fsize = $('#txtUploadFile12')[0].files[0].size;
                    var ftype = $('#txtUploadFile12')[0].files[0].type;
                    var fname = $('#txtUploadFile12')[0].files[0].name;

                    if (fsize > 1048576) //do something if file size more than 1 mb (1048576)
                    {
                        Isvalid = false;

                        alert("Type :" + ftype + " | " + fsize + " bites\n(File: " + fname + ") Too big!");
                    }
                    else {
                        Isvalid = true;
                    }
                }
                return Isvalid;
            }
        }

        $(document).on('click', '.remove', function () {

            var current = $(this).closest("tr");

            var Name = current.find(".FileName").val();

            $.ajax({
                url: "/Qutation/DeleteFile",
                type: "POST",
                data: JSON.stringify({ Id: $('#QutationID').val(), FileName: Name }),
                contentType: "application/json",
                dataType: "json",
                success: function (result) {
                    if (result == "Success") {
                        current.remove();
                    }
                },
                error: function (err) {
                    alert(err.statusText);
                }
            });

        });

        $(document).ready(function () {
            $('#participantTable #DeleteFile').click(function (e) {
                var Current = $(this).closest("tr")
                e.preventDefault();
                swal({
                    title: "Are you sure?",
                    text: "You will not be able to recover this imaginary file!",
                    type: "warning",
                    showCancelButton: true,
                    confirmButtonClass: "btn-danger",
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel!",
                    closeOnConfirm: false,
                    closeOnCancel: false
                },
                  function (isConfirm) {
                      if (isConfirm) {
                          var FileName = Current.find('.FileName').val();
                          DeleteFileFromFolder(FileName, Current);
                          swal("Deleted!", "Your imaginary file has been deleted.", "success");
                      } else {
                          swal("Cancelled", "Your imaginary file is safe :)", "error");
                      }
                  });
            });
        });

        function DeleteFileFromFolder(FilenameToDelete, currentRow) {
            $.ajax({
                url: "/Qutation/DeleteFile",
                type: "POST",
                data: JSON.stringify({ Id: $('#QutationID').val(), FileName: FilenameToDelete }),
                contentType: "application/json",
                dataType: "json",
                success: function (result) {
                    if (result == "Success") {
                        currentRow.remove();
                    }
                },
                error: function (err) {
                    alert(err.statusText);
                }
            });
        }

        $(document).ready(function () {
            $('.QutationDate').datepicker({
                changeMonth: true,
                changeYear: true,
                gotoCurrent: true,
                //dateFormat: 'dd/mm/yy',
            });
            if ($(this).hasClass('birthdate')) {
                $(this).datepicker('option', 'yearRange', '1980:c');
                $(this).datepicker('option', 'defaultDate', '-10y');
            }
        });
        
        $(document).ready(function () {
            $('.DueDate').datepicker({
                changeMonth: true,
                changeYear: true,
                gotoCurrent: true,
                //dateFormat: 'dd/mm/yy',
            });
            if ($(this).hasClass('birthdate')) {
                $(this).datepicker('option', 'yearRange', '1980:c');
                $(this).datepicker('option', 'defaultDate', '-10y');
            }
        });
        
        $('body').on('focus', ".ss", function () {

            $(this).closest('tr').find(':input').removeClass('hasDatepicker');
            $(this).datepicker({
                changeMonth: true,
                changeYear: true,
                gotoCurrent: true,

                //dateFormat: 'dd/mm/yy',
            });
            if ($(this).hasClass('birthdate')) {
                $(this).datepicker('option', 'yearRange', '1980:c');
                $(this).datepicker('option', 'defaultDate', '-10y');
            }
        });
        
     </script>

    <script>

        $(document).ready(function () {
            $('#mainrow1  .ServiceDate').datepicker({
                changeMonth: true,
                changeYear: true,
                gotoCurrent: true,
                datetime: new Date(),
                //dateFormat: 'dd/mm/yy',
            }).datepicker("setDate", new Date());
            if ($(this).hasClass('birthdate')) {
                $(this).datepicker('option', 'yearRange', '1980:c');
                $(this).datepicker('option', 'defaultDate', '-10y');
            }
        });

    </script>



